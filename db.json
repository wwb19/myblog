{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"c01ddee3d7fb79d74ab2ef5e578b8ad5c29d275c","modified":1536167070798},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1536167179738},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1536167179738},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1536167179738},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1536167179738},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1536167179738},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1536167179738},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1536167179738},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1536167179738},{"_id":"themes/next/README.md","hash":"c1d6d1c6b75736b892e179865833ea58da5ca9d2","modified":1536167179738},{"_id":"themes/next/_config.yml","hash":"a9147e65c496a416b0f1c1a341813431619b35f9","modified":1536170639361},{"_id":"themes/next/bower.json","hash":"5391684ba84fe633bc7877ab711a7d8a0072ceda","modified":1536167179742},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1536167179742},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1536167179742},{"_id":"themes/next/package.json","hash":"9acf6b8c8194f8a366025c8aab64d236908e62a1","modified":1536167179746},{"_id":"source/_posts/course-redisInstall.md","hash":"9e3c45e8e2b054a79e5c557114d09ccb5e000e61","modified":1536170706456},{"_id":"source/_posts/project-redis-s00.md","hash":"4dbe64942fc87acee80c2881f422ab355a47e84a","modified":1536170738216},{"_id":"source/_posts/project-redis-s01.md","hash":"2947998477b580258981b77deae6d88b2c80f778","modified":1536170747128},{"_id":"source/_posts/share-redis-summary20180722.md","hash":"76558b133eca1cca672fa86e9d533b6f5955e0df","modified":1536170767284},{"_id":"source/_posts/work-redisMeeting.md","hash":"2e18f4ed486a7a7f60281278b0200710c59068cb","modified":1536170780995},{"_id":"source/about/index.md","hash":"8d965a94ec6aa1cd03f894a8bef1bc1ae30b7086","modified":1536167468878},{"_id":"source/categories/index.md","hash":"44566e91b419f42b77ac42ac8e8848d1d1e8776b","modified":1536170227679},{"_id":"source/tags/index.md","hash":"c28c6aaa700da1cc76f2e14e90862c9126df0e15","modified":1536170021554},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1536167179730},{"_id":"themes/next/.git/config","hash":"3aa58ad32c5b537b7b64d00c59cc2787e74a3fd2","modified":1536167179730},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1536167176118},{"_id":"themes/next/.git/index","hash":"4393680fcaef360fc50dcffc893a2022daa80f34","modified":1536167179758},{"_id":"themes/next/.git/packed-refs","hash":"a6fb5bb176f6cd8bb8e097606334f32391d9b25d","modified":1536167179730},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1536167179738},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1536167179738},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1536167179738},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1536167179738},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1536167179738},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1536167179738},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1536167179742},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1536167179742},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1536167179742},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1536167179742},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1536167179742},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1536167179742},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1536167179742},{"_id":"themes/next/docs/MATH.md","hash":"0ae4258950de01a457ea8123a8d13ec6db496e53","modified":1536167179742},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1536167179742},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1536167179742},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1536167179742},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1536167179742},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1536167179742},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1536167179742},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1536167179742},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1536167179742},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1536167179742},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1536167179742},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1536167179742},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1536167179742},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1536167179742},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1536167179742},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1536167179742},{"_id":"themes/next/languages/zh-CN.yml","hash":"cef4b0dae76141042ac5d87c89326101dd602b7b","modified":1536168046549},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1536167179742},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1536167179742},{"_id":"themes/next/layout/_layout.swig","hash":"1b59036ccb2ad571503b94587f458fad46775642","modified":1536167179742},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1536167179746},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1536167179746},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1536167179746},{"_id":"themes/next/layout/page.swig","hash":"79040bae5ec14291441b33eea341a24a7c0e9f93","modified":1536167179746},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1536167179746},{"_id":"themes/next/layout/schedule.swig","hash":"3e9cba5313bf3b98a38ccb6ef78b56ffa11d66ee","modified":1536167179746},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1536167179746},{"_id":"themes/next/scripts/helpers.js","hash":"a70bfad3efda76738dab12e28e8b75e3989ee3da","modified":1536167179746},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1536167179746},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1536167179746},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1536167179758},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1536167179758},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1536167179758},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"source/img/avatar.jpg","hash":"caa4d2101160f729def31e1d626f0d6944492a90","modified":1536168872054},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1536167176122},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1536167176118},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1536167176118},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1536167176118},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1536167176122},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1536167176118},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1536167176122},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1536167176118},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1536167176118},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1536167176122},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1536167176122},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1536167176122},{"_id":"themes/next/.git/logs/HEAD","hash":"cbea18f1c311212f5673ebe8483ba497e42362d7","modified":1536167179730},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1536167179742},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1536167179742},{"_id":"themes/next/docs/ru/README.md","hash":"edfe0cfb8b2c9f0effd3beb868af9bfd0fabb3a6","modified":1536167179742},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"e03607b608db4aa7d46f6726827c51ac16623339","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/README.md","hash":"46b264623af21211a0a9c4ba0cf1318a80eeb9fb","modified":1536167179742},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1536167179742},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1536167179742},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1536167179742},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1536167179742},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"cf2ca7edbfd6cec253d838e5ae4b0758cbe1f14e","modified":1536170934330},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"4ce49337317fc6e4a54ca2f3f7db303eced7c6f0","modified":1536167702167},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1536167179742},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0790ddbc349508d7ece45a9a4391d0a1cd7263cc","modified":1536167179742},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1536167179742},{"_id":"themes/next/layout/_macro/post.swig","hash":"f20a8f2f255fa4c7e330b010027beaf29d5ad455","modified":1536171012293},{"_id":"themes/next/layout/_macro/reward.swig","hash":"bd5778d509c51f4b1d8da3a2bc35462929f08c75","modified":1536167179742},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1f3121ef66a4698fd78f34bf2594ef79a407c92c","modified":1536167179742},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1536167179742},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1536167179742},{"_id":"themes/next/layout/_partials/comments.swig","hash":"eafff2d623af8991844f34819a60e37ac11ef245","modified":1536167179742},{"_id":"themes/next/layout/_partials/footer.swig","hash":"05cdaf9b6cb32afd442b228cd247aaf9468a31ed","modified":1536167179742},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1536167179746},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1536167179746},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1536167179746},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1536167179746},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1536167179746},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1536167179746},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1536167179746},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1536167179746},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1536167179746},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1536167179746},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1536167179746},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1536167179746},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1536167179746},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1536167179746},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1536167179746},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1536167179746},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1536167179746},{"_id":"themes/next/scripts/tags/exturl.js","hash":"1412ce2ef59fa4137b697a507fd759ff067a2398","modified":1536167179746},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1536167179746},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1d59b968af4b8d147f8bc9bc295d596e41be8348","modified":1536167179746},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1536167179746},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1536167179746},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1536167179746},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1536167179746},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1536167179750},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1536167179750},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1536167179750},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1536167179750},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1536167179750},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1536167179750},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1536167179750},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1536167179750},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1536167179750},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1536167179750},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1536167179750},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1536167179750},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1536167179750},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536167179750},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1536167179750},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536167179750},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1536167179750},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1536167179750},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1536167179750},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179746},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179746},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1536167179750},{"_id":"themes/next/.git/refs/heads/master","hash":"ac845fb35dc632c804d5d2eebcd731ad4d4ddfac","modified":1536167179730},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1536167179742},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"d1b73c926109145e52605929b75914cc8b60fb89","modified":1536167179742},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1536167179742},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1536167179742},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1536167179742},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1536167179742},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1536167179742},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1536167179742},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1536167179742},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1536167179746},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1536167179746},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1536167179746},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1536167179746},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1536167179746},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1536167179746},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1536167179746},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1536167179746},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1536167179746},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1536167179746},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"8878241797f8494a70968756c57cacdfc77b61c7","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1536167179746},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1536167179746},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1536167179746},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1536167179746},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1536167179746},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1536167179746},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1536167179746},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1536167179746},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1536167179746},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1536167179750},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1536167179750},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1536167179750},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"51c2907e5c50c2614419b670fbdec183ae7f7f5d","modified":1536167179750},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1536167179750},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1536167179750},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1536167179750},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0b43ddd92e395342703550f629699c5e591fd68b","modified":1536167179750},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1536167179750},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1536167179750},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1536167179750},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1536167179750},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1536167179750},{"_id":"themes/next/source/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1536167179750},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1536167179750},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1536167179750},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1536167179750},{"_id":"themes/next/source/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1536167179750},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1536167179754},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1536167179754},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1536167179758},{"_id":"themes/next/.git/objects/pack/pack-4bfbfc93c35a49a09aeda593e851f3b08f911eaf.idx","hash":"3b41c9927eda65ad812b43162c0b6073b013e31c","modified":1536167179650},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1536167179754},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"cbea18f1c311212f5673ebe8483ba497e42362d7","modified":1536167179730},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1536167179730},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1536167179746},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1536167179750},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1536167179750},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"fca5320e2644edcd663888863899d1b80352439b","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1536167179750},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1536167179754},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1536167179754},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1536167179754},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1536167179754},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1536167179754},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1536167179754},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"cbea18f1c311212f5673ebe8483ba497e42362d7","modified":1536167179730},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"00421adeb68a08e6e2276425ebd085b6a2078b30","modified":1536171334411},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"c0ac49fadd33ca4a9a0a04d5ff2ac6560d0ecd9e","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ed9608d2740a33664eb703f806c218a4fc520087","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1536167179746},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"cf2185a0ea170fd8450f592e859a6c941141e5ee","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1536167179750},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1536167179750},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1536167179750},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1536167179754},{"_id":"themes/next/.git/objects/pack/pack-4bfbfc93c35a49a09aeda593e851f3b08f911eaf.pack","hash":"530eff2ea5d1ea3e08dce1cc4831689ada7ff295","modified":1536167179650},{"_id":"public/about/index.html","hash":"2cd5d2a876294c82a98670f058f49a3bb93b34b6","modified":1536171342735},{"_id":"public/categories/index.html","hash":"e162c161481dd1b2b3c8bf07f06dedc892f23e21","modified":1536171342735},{"_id":"public/tags/index.html","hash":"34cf830784f3c17a272dd769653c2971c08363d9","modified":1536171342735},{"_id":"public/archives/index.html","hash":"655b30edc9748fa6e044d44e49e5999ce132ed19","modified":1536171342736},{"_id":"public/archives/2018/index.html","hash":"82e9b434cddc35410c4029f58f446a13a5128d32","modified":1536171342736},{"_id":"public/archives/2018/06/index.html","hash":"32d600ab853e889ee4a05223bf6e9117bda521ab","modified":1536171342736},{"_id":"public/archives/2018/07/index.html","hash":"23185671d0b49b55b733a6ced7dd3a99c1cb6fae","modified":1536171342736},{"_id":"public/categories/技术/index.html","hash":"36d99075d9fa591041f30e6d3d1e412542247b86","modified":1536171342736},{"_id":"public/categories/技术/分享/index.html","hash":"0cc9e7da663bfdc322b711e821f2984a5df2b77f","modified":1536171342736},{"_id":"public/categories/技术/教程/index.html","hash":"d03124e15ae0bdf60430e02303b757cac3cef8cd","modified":1536171342736},{"_id":"public/categories/工作/index.html","hash":"9d5fe4ef3002970f8883d895f419643ca08cae48","modified":1536171342736},{"_id":"public/categories/技术/实践/index.html","hash":"8284421ed513de6ece252b79968eb5476b09e1ed","modified":1536171342736},{"_id":"public/categories/工作/培训/index.html","hash":"e0c834dc38f4653da73fe8114e12a67bb705a602","modified":1536171342736},{"_id":"public/tags/技术/index.html","hash":"afb38c8de4df6605e4dfcb129a641fc0babd3824","modified":1536171342736},{"_id":"public/tags/redis/index.html","hash":"21f63673ef9f9154cbccb67a7c1d74ac3ee1baa4","modified":1536171342736},{"_id":"public/tags/教程/index.html","hash":"bc3d25a3403b3943cbde74f47513a2627a693428","modified":1536171342736},{"_id":"public/tags/生产/index.html","hash":"5128c8906b520e73afb1981dba84221ae8517c7b","modified":1536171342736},{"_id":"public/tags/项目/index.html","hash":"3bb14a7f07d3969e80a1861c92ef5289e7ccf945","modified":1536171342736},{"_id":"public/tags/培训/index.html","hash":"7d9ab82115c37c0caa3753f0c32a5dae3bc31322","modified":1536171342736},{"_id":"public/tags/会议/index.html","hash":"397f4e04cacfb19f6a8be333a820462e3f2d6979","modified":1536171342737},{"_id":"public/2018/07/22/share-redis-summary20180722/index.html","hash":"41d6300a81a0fce795f0739d1204df38b181d244","modified":1536171342737},{"_id":"public/2018/06/22/work-redisMeeting/index.html","hash":"68574a2a3092f5173653dcdf677dc75f557e2ed2","modified":1536171342737},{"_id":"public/2018/06/18/course-redisInstall/index.html","hash":"1c49660df7847f50951b90dc3d19e0387f896bff","modified":1536171342737},{"_id":"public/2018/06/18/project-redis-s00/index.html","hash":"9eb2e26f7893a043d12d147b1b2540ced924efb3","modified":1536171342737},{"_id":"public/2018/06/18/project-redis-s01/index.html","hash":"1c3c000c0cb21ef10ac28fd25b957fbd8e015f60","modified":1536171342737},{"_id":"public/index.html","hash":"ad350071c4c01a990c36282af14914173cc0a4e2","modified":1536171342737},{"_id":"public/CNAME","hash":"c01ddee3d7fb79d74ab2ef5e578b8ad5c29d275c","modified":1536171342740},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1536171342740},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1536171342740},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1536171342740},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1536171342740},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1536171342740},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1536171342740},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1536171342741},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1536171342741},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1536171342741},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1536171342741},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1536171342741},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1536171342741},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536171342741},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1536171342741},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1536171342741},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1536171342741},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1536171342741},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1536171342741},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1536171342741},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1536171342741},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1536171343233},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1536171343236},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1536171343239},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1536171343239},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1536171343239},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1536171343239},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1536171343239},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1536171343239},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1536171343239},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1536171343239},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1536171343239},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1536171343239},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1536171343239},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1536171343240},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1536171343240},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1536171343240},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1536171343240},{"_id":"public/css/main.css","hash":"c98b0b299f84771772b99e0769445ca35ca442a7","modified":1536171343240},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1536171343240},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1536171343240},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1536171343240},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1536171343240},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1536171343240},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1536171343240},{"_id":"public/img/avatar.jpg","hash":"caa4d2101160f729def31e1d626f0d6944492a90","modified":1536171343240},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1536171343240}],"Category":[{"name":"技术","_id":"cjlpgr4hu00046ouaztgyh6st"},{"name":"分享","parent":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4i3000e6ouaxu8ishpc"},{"name":"教程","parent":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4i4000g6ouay0xeghhj"},{"name":"工作","_id":"cjlpgr4i5000k6ouap2talv4v"},{"name":"实践","parent":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4i7000r6oua08gh7ykt"},{"name":"培训","parent":"cjlpgr4i5000k6ouap2talv4v","_id":"cjlpgr4ia000z6oua8k95i9sd"}],"Data":[],"Page":[{"title":"about","date":"2018-09-05T17:11:08.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-06 01:11:08\n---\n","updated":"2018-09-05T17:11:08.878Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjlpgr4hq00016ouad3i9m2j0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-06-18T09:05:24.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-06-18 17:05:24\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2018-09-05T17:57:07.679Z","path":"categories/index.html","comments":1,"_id":"cjlpgr4ht00036ouawaiqx17g","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-06-18T09:04:20.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-06-18 17:04:20\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2018-09-05T17:53:41.554Z","path":"tags/index.html","comments":1,"_id":"cjlpgr4hx00076ouapgmrel4p","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"【教程】Redis 3.2 详细安装步骤说明","date":"2018-06-18T10:41:03.000Z","copyright":true,"_content":"\n\n# Note\n>本文用于Redis的部署安装\n>配置文件内容需根据实际情况进行设置\n>本文为Sentinel哨兵模式的集群搭建，若需Cluster集群模式，可查看Redis安装部署内容，集群安装不适合。\n<!-- more --> \n# 一、部署说明\n\n## 集群信息\n\n* 集群：1主2从\n\n* master：主服务器\n\n* slave：从服务器\n\n同步时间间隔：1s。每秒中，slave从master进行数据同步操作。\n\n## 硬件配置要求\n\n|配置项|内容|\n| --- | --- | \n| CPU | 4c\\*2.4g | \n| 内存 | 32g |\n| 磁盘 | 1000G |\n| 系统版本 | Redhat 7.3 |\n| Redis版本 | 3.2.11 |\n\n* 哨兵集群：Redis-Sentiel\n\n相互服务发现机制，通过选举确定master是否可用。\n\n选举配置：2。意味着3台中只要有两台无法与master通讯时，进行切换master操作。\n\n* 读写分离\n\nMaster作为写服务器，Salve作为读服务器。通过数据同步，保证主从数据一致。\n\n# 二、安装部署\n\n## 1、redis安装部署步骤\n\n### Master节点安装\n\n#### 1、安装系统依赖包\n```\nyum install --downloadonly --downloaddir=/tmp/download\n```\n\n```\nyum -y install gcc automake autoconf libtool make telnet ruby-devel ruby-irb ruby-libs ruby-rdoc ruby rubygems-devel rubygems\n```\n#### 2、安装ruby包\n```\nyum -y install centos-release-scl-rh centos-release-scl\n\nsed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl.repo\n\nsed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo\n\nsed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl.repo\n\nsed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo\n\nyum --enablerepo=centos-sclo-rh -y install rh-ruby22\n\nscl enable rh-ruby22 bash\n\nruby –v\n```\n\n#### 3、安装reids ruby控制包\n\n```\ngem install redis\n```\n\n#### 4、安装redis\n```\ncd  /tmp\n\nyum install -y wget\n\nwget http://download.redis.io/releases/redis-3.2.11.tar.gz\n\ntar -zxf redis-3.2.11.tar.gz\n\ncd redis-3.2.11\n\nmake\n\ncd src &amp;&amp; make install PREFIX=/usr/local/redis\n\ncd ..\n\nmkdir /usr/local/redis/etc\n\nmkdir /usr/local/redis/db\n\ncp redis.conf /usr/local/redis/etc/\n\ncp ./src/redis-trib.rb /usr/local/redis/bin/\n```\n#### 5、修改配置文件\n```\nvi /usr/local/redis/etc/redis.conf\n\n#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信\n\nprotected-mode yes\n\ndaemonize yes #用守护模式启动\n\npidfile /var/run/redis\\_6379.pid #不同机器PID文件不一样，我们用7001-7006 #可以用同一个，但是为了统一还是建议改成不同的\n\nlogfile /var/log/redis.log\n\ndir /usr/local/redis/db/\n\nmasterauth password\n\nrequirepass password\n\nappendonly yes #开启AOF模式\n```\n\n### Slave节点安装\n\n#### 同上1-4\n\n#### 修改配置文件\n```\nvi /usr/local/redis/etc/redis.conf\n\n#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信\n\nprotected-mode yes\n\ndaemonize yes #用守护模式启动\n\nport 6379 #修改为port 6380\n\n#增加 slaveof 192.168.81.129 6380\n\nslaveof 172.20.10.12 6379\n\npidfile /var/run/redis\\_6380.pid #不同机器PID文件不一样， #可以用同一个，但是为了统一还是建议改成不同的\n\nlogfile /var/log/redis.log\n\ndir /usr/local/redis/db/\n\nmasterauth password\n\nrequirepass password\n\nappendonly yes #开启AOF模式\n```\n增加requirepass password，这是设置redis客户端或者远程机器连接redis服务器需要的密码，这里同样设为redis（6381的密码也设为redis）\n\n### Sential哨兵安装\n\n#### 安装哨兵\n\n哨兵与redis在同一服务器下，无需安装，redis自带。\n\n若与redis不在统一服务器下，可参考上redis安装1-4步骤。\n\n#### 修改配置（每个哨兵配置，除监听端口外，其他保持一致）\n```\ncd /tmp/redis-3.2.11\n```\n复制配置到 etc目录\n\n```\ncp sentinel.conf /usr/local/redis/etc/sentinel.conf\n\nvi /usr/local/redis/etc/sentinel.conf\n\n增加\n\nbind 0.0.0.0\n\n端口是 26379\n\n增加：\n\ndaemonize yes\n\nlogfile /var/log/sentinel.log\n\n搜索 sentinel monitor  下面增加\n\nsentinel monitor mymaster 172.20.10.12 6379 2\n\n对sentinel monitor mymaster 192.168.81.129 6379 2\n```\n\n解释：\nmymaster ：为主服务器起的名字；\n\n192.168.81.129 6379：主服务器的ip和端口号\n\n2：代表有2个哨兵认为主服务器主观下线时，则认为主服务器是客观下线了，可以执行主从切换，并进行故障转移操作\n\n```\n搜索 auth-pass  下面增加ps\nsentinel auth-pass mymaster password\n```\n\n## 2、集群启动\n\n### 启动redis集群：\n\n#### 服务器A：\n\nredis – 6379\n\n哨兵-26379\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n#### 服务器B：\n\nredis – 6380\n\n哨兵-26380\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n#### 服务器C：\n\nredis – 6381\n\n哨兵-26381\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n### 启动哨兵集群：\n\n#### 服务器A：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n#### 服务器B：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n#### 服务器C：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n\n\n## 3、安装验证\n\n### 集群部署验证\n```\n/usr/local/redis/bin/redis-cli\n\n  127.0.0.1:6379 auth password\n\n  OK\n\n  127.0.0.1:6379 info replication\n\n# Replication\n\nrole:master\n\nconnected\\_slaves:2\n\nslave0:ip=172.17.0.1,port=6380,state=online,offset=407,lag=1\n\nslave1:ip=172.17.0.1,port=6381,state=online,offset=407,lag=1\n\nmaster\\_repl\\_offset:407\n\nrepl\\_backlog\\_active:1\n\nrepl\\_backlog\\_size:1048576\n\nrepl\\_backlog\\_first\\_byte\\_offset:2\n\nrepl\\_backlog\\_histlen:406\n```\n\n#### 查询验证\n\n```\n/usr/local/redis/bin/redis-cli -h 172.20.10.12 -p 6380\n\n  127.0.0.1:6380 auth password\n\n  OK\n\n  127.0.0.1:6380 keys \\*\n\n  (empty list or set)\n```\n  \n#### 新增验证\n\n无\n\n","source":"_posts/course-redisInstall.md","raw":"---\ntitle:  【教程】Redis 3.2 详细安装步骤说明\ndate: 2018-06-18 18:41:03\ntags: \n   - 技术 \n   - redis \n   - 教程\n   - 生产\ncategories:\n    - 技术\n    - 教程\ncopyright: true\n---\n\n\n# Note\n>本文用于Redis的部署安装\n>配置文件内容需根据实际情况进行设置\n>本文为Sentinel哨兵模式的集群搭建，若需Cluster集群模式，可查看Redis安装部署内容，集群安装不适合。\n<!-- more --> \n# 一、部署说明\n\n## 集群信息\n\n* 集群：1主2从\n\n* master：主服务器\n\n* slave：从服务器\n\n同步时间间隔：1s。每秒中，slave从master进行数据同步操作。\n\n## 硬件配置要求\n\n|配置项|内容|\n| --- | --- | \n| CPU | 4c\\*2.4g | \n| 内存 | 32g |\n| 磁盘 | 1000G |\n| 系统版本 | Redhat 7.3 |\n| Redis版本 | 3.2.11 |\n\n* 哨兵集群：Redis-Sentiel\n\n相互服务发现机制，通过选举确定master是否可用。\n\n选举配置：2。意味着3台中只要有两台无法与master通讯时，进行切换master操作。\n\n* 读写分离\n\nMaster作为写服务器，Salve作为读服务器。通过数据同步，保证主从数据一致。\n\n# 二、安装部署\n\n## 1、redis安装部署步骤\n\n### Master节点安装\n\n#### 1、安装系统依赖包\n```\nyum install --downloadonly --downloaddir=/tmp/download\n```\n\n```\nyum -y install gcc automake autoconf libtool make telnet ruby-devel ruby-irb ruby-libs ruby-rdoc ruby rubygems-devel rubygems\n```\n#### 2、安装ruby包\n```\nyum -y install centos-release-scl-rh centos-release-scl\n\nsed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl.repo\n\nsed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo\n\nsed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl.repo\n\nsed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo\n\nyum --enablerepo=centos-sclo-rh -y install rh-ruby22\n\nscl enable rh-ruby22 bash\n\nruby –v\n```\n\n#### 3、安装reids ruby控制包\n\n```\ngem install redis\n```\n\n#### 4、安装redis\n```\ncd  /tmp\n\nyum install -y wget\n\nwget http://download.redis.io/releases/redis-3.2.11.tar.gz\n\ntar -zxf redis-3.2.11.tar.gz\n\ncd redis-3.2.11\n\nmake\n\ncd src &amp;&amp; make install PREFIX=/usr/local/redis\n\ncd ..\n\nmkdir /usr/local/redis/etc\n\nmkdir /usr/local/redis/db\n\ncp redis.conf /usr/local/redis/etc/\n\ncp ./src/redis-trib.rb /usr/local/redis/bin/\n```\n#### 5、修改配置文件\n```\nvi /usr/local/redis/etc/redis.conf\n\n#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信\n\nprotected-mode yes\n\ndaemonize yes #用守护模式启动\n\npidfile /var/run/redis\\_6379.pid #不同机器PID文件不一样，我们用7001-7006 #可以用同一个，但是为了统一还是建议改成不同的\n\nlogfile /var/log/redis.log\n\ndir /usr/local/redis/db/\n\nmasterauth password\n\nrequirepass password\n\nappendonly yes #开启AOF模式\n```\n\n### Slave节点安装\n\n#### 同上1-4\n\n#### 修改配置文件\n```\nvi /usr/local/redis/etc/redis.conf\n\n#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信\n\nprotected-mode yes\n\ndaemonize yes #用守护模式启动\n\nport 6379 #修改为port 6380\n\n#增加 slaveof 192.168.81.129 6380\n\nslaveof 172.20.10.12 6379\n\npidfile /var/run/redis\\_6380.pid #不同机器PID文件不一样， #可以用同一个，但是为了统一还是建议改成不同的\n\nlogfile /var/log/redis.log\n\ndir /usr/local/redis/db/\n\nmasterauth password\n\nrequirepass password\n\nappendonly yes #开启AOF模式\n```\n增加requirepass password，这是设置redis客户端或者远程机器连接redis服务器需要的密码，这里同样设为redis（6381的密码也设为redis）\n\n### Sential哨兵安装\n\n#### 安装哨兵\n\n哨兵与redis在同一服务器下，无需安装，redis自带。\n\n若与redis不在统一服务器下，可参考上redis安装1-4步骤。\n\n#### 修改配置（每个哨兵配置，除监听端口外，其他保持一致）\n```\ncd /tmp/redis-3.2.11\n```\n复制配置到 etc目录\n\n```\ncp sentinel.conf /usr/local/redis/etc/sentinel.conf\n\nvi /usr/local/redis/etc/sentinel.conf\n\n增加\n\nbind 0.0.0.0\n\n端口是 26379\n\n增加：\n\ndaemonize yes\n\nlogfile /var/log/sentinel.log\n\n搜索 sentinel monitor  下面增加\n\nsentinel monitor mymaster 172.20.10.12 6379 2\n\n对sentinel monitor mymaster 192.168.81.129 6379 2\n```\n\n解释：\nmymaster ：为主服务器起的名字；\n\n192.168.81.129 6379：主服务器的ip和端口号\n\n2：代表有2个哨兵认为主服务器主观下线时，则认为主服务器是客观下线了，可以执行主从切换，并进行故障转移操作\n\n```\n搜索 auth-pass  下面增加ps\nsentinel auth-pass mymaster password\n```\n\n## 2、集群启动\n\n### 启动redis集群：\n\n#### 服务器A：\n\nredis – 6379\n\n哨兵-26379\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n#### 服务器B：\n\nredis – 6380\n\n哨兵-26380\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n#### 服务器C：\n\nredis – 6381\n\n哨兵-26381\n\n/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf\n\n### 启动哨兵集群：\n\n#### 服务器A：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n#### 服务器B：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n#### 服务器C：\n\n/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf\n\n\n\n## 3、安装验证\n\n### 集群部署验证\n```\n/usr/local/redis/bin/redis-cli\n\n  127.0.0.1:6379 auth password\n\n  OK\n\n  127.0.0.1:6379 info replication\n\n# Replication\n\nrole:master\n\nconnected\\_slaves:2\n\nslave0:ip=172.17.0.1,port=6380,state=online,offset=407,lag=1\n\nslave1:ip=172.17.0.1,port=6381,state=online,offset=407,lag=1\n\nmaster\\_repl\\_offset:407\n\nrepl\\_backlog\\_active:1\n\nrepl\\_backlog\\_size:1048576\n\nrepl\\_backlog\\_first\\_byte\\_offset:2\n\nrepl\\_backlog\\_histlen:406\n```\n\n#### 查询验证\n\n```\n/usr/local/redis/bin/redis-cli -h 172.20.10.12 -p 6380\n\n  127.0.0.1:6380 auth password\n\n  OK\n\n  127.0.0.1:6380 keys \\*\n\n  (empty list or set)\n```\n  \n#### 新增验证\n\n无\n\n","slug":"course-redisInstall","published":1,"updated":"2018-09-05T18:05:06.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlpgr4hl00006ouadkhlw2tc","content":"<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><blockquote>\n<p>本文用于Redis的部署安装<br>配置文件内容需根据实际情况进行设置<br>本文为Sentinel哨兵模式的集群搭建，若需Cluster集群模式，可查看Redis安装部署内容，集群安装不适合。<br><a id=\"more\"></a> </p>\n</blockquote>\n<h1 id=\"一、部署说明\"><a href=\"#一、部署说明\" class=\"headerlink\" title=\"一、部署说明\"></a>一、部署说明</h1><h2 id=\"集群信息\"><a href=\"#集群信息\" class=\"headerlink\" title=\"集群信息\"></a>集群信息</h2><ul>\n<li><p>集群：1主2从</p>\n</li>\n<li><p>master：主服务器</p>\n</li>\n<li><p>slave：从服务器</p>\n</li>\n</ul>\n<p>同步时间间隔：1s。每秒中，slave从master进行数据同步操作。</p>\n<h2 id=\"硬件配置要求\"><a href=\"#硬件配置要求\" class=\"headerlink\" title=\"硬件配置要求\"></a>硬件配置要求</h2><table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CPU</td>\n<td>4c*2.4g</td>\n</tr>\n<tr>\n<td>内存</td>\n<td>32g</td>\n</tr>\n<tr>\n<td>磁盘</td>\n<td>1000G</td>\n</tr>\n<tr>\n<td>系统版本</td>\n<td>Redhat 7.3</td>\n</tr>\n<tr>\n<td>Redis版本</td>\n<td>3.2.11</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>哨兵集群：Redis-Sentiel</li>\n</ul>\n<p>相互服务发现机制，通过选举确定master是否可用。</p>\n<p>选举配置：2。意味着3台中只要有两台无法与master通讯时，进行切换master操作。</p>\n<ul>\n<li>读写分离</li>\n</ul>\n<p>Master作为写服务器，Salve作为读服务器。通过数据同步，保证主从数据一致。</p>\n<h1 id=\"二、安装部署\"><a href=\"#二、安装部署\" class=\"headerlink\" title=\"二、安装部署\"></a>二、安装部署</h1><h2 id=\"1、redis安装部署步骤\"><a href=\"#1、redis安装部署步骤\" class=\"headerlink\" title=\"1、redis安装部署步骤\"></a>1、redis安装部署步骤</h2><h3 id=\"Master节点安装\"><a href=\"#Master节点安装\" class=\"headerlink\" title=\"Master节点安装\"></a>Master节点安装</h3><h4 id=\"1、安装系统依赖包\"><a href=\"#1、安装系统依赖包\" class=\"headerlink\" title=\"1、安装系统依赖包\"></a>1、安装系统依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install --downloadonly --downloaddir=/tmp/download</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make telnet ruby-devel ruby-irb ruby-libs ruby-rdoc ruby rubygems-devel rubygems</span><br></pre></td></tr></table></figure>\n<h4 id=\"2、安装ruby包\"><a href=\"#2、安装ruby包\" class=\"headerlink\" title=\"2、安装ruby包\"></a>2、安装ruby包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install centos-release-scl-rh centos-release-scl</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class=\"line\"></span><br><span class=\"line\">yum --enablerepo=centos-sclo-rh -y install rh-ruby22</span><br><span class=\"line\"></span><br><span class=\"line\">scl enable rh-ruby22 bash</span><br><span class=\"line\"></span><br><span class=\"line\">ruby –v</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、安装reids-ruby控制包\"><a href=\"#3、安装reids-ruby控制包\" class=\"headerlink\" title=\"3、安装reids ruby控制包\"></a>3、安装reids ruby控制包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、安装redis\"><a href=\"#4、安装redis\" class=\"headerlink\" title=\"4、安装redis\"></a>4、安装redis</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd  /tmp</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y wget</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://download.redis.io/releases/redis-3.2.11.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxf redis-3.2.11.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd redis-3.2.11</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">cd src &amp;amp;&amp;amp; make install PREFIX=/usr/local/redis</span><br><span class=\"line\"></span><br><span class=\"line\">cd ..</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /usr/local/redis/etc</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /usr/local/redis/db</span><br><span class=\"line\"></span><br><span class=\"line\">cp redis.conf /usr/local/redis/etc/</span><br><span class=\"line\"></span><br><span class=\"line\">cp ./src/redis-trib.rb /usr/local/redis/bin/</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、修改配置文件\"><a href=\"#5、修改配置文件\" class=\"headerlink\" title=\"5、修改配置文件\"></a>5、修改配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/redis/etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信</span><br><span class=\"line\"></span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes #用守护模式启动</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile /var/run/redis\\_6379.pid #不同机器PID文件不一样，我们用7001-7006 #可以用同一个，但是为了统一还是建议改成不同的</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/redis.log</span><br><span class=\"line\"></span><br><span class=\"line\">dir /usr/local/redis/db/</span><br><span class=\"line\"></span><br><span class=\"line\">masterauth password</span><br><span class=\"line\"></span><br><span class=\"line\">requirepass password</span><br><span class=\"line\"></span><br><span class=\"line\">appendonly yes #开启AOF模式</span><br></pre></td></tr></table></figure>\n<h3 id=\"Slave节点安装\"><a href=\"#Slave节点安装\" class=\"headerlink\" title=\"Slave节点安装\"></a>Slave节点安装</h3><h4 id=\"同上1-4\"><a href=\"#同上1-4\" class=\"headerlink\" title=\"同上1-4\"></a>同上1-4</h4><h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/redis/etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信</span><br><span class=\"line\"></span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes #用守护模式启动</span><br><span class=\"line\"></span><br><span class=\"line\">port 6379 #修改为port 6380</span><br><span class=\"line\"></span><br><span class=\"line\">#增加 slaveof 192.168.81.129 6380</span><br><span class=\"line\"></span><br><span class=\"line\">slaveof 172.20.10.12 6379</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile /var/run/redis\\_6380.pid #不同机器PID文件不一样， #可以用同一个，但是为了统一还是建议改成不同的</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/redis.log</span><br><span class=\"line\"></span><br><span class=\"line\">dir /usr/local/redis/db/</span><br><span class=\"line\"></span><br><span class=\"line\">masterauth password</span><br><span class=\"line\"></span><br><span class=\"line\">requirepass password</span><br><span class=\"line\"></span><br><span class=\"line\">appendonly yes #开启AOF模式</span><br></pre></td></tr></table></figure>\n<p>增加requirepass password，这是设置redis客户端或者远程机器连接redis服务器需要的密码，这里同样设为redis（6381的密码也设为redis）</p>\n<h3 id=\"Sential哨兵安装\"><a href=\"#Sential哨兵安装\" class=\"headerlink\" title=\"Sential哨兵安装\"></a>Sential哨兵安装</h3><h4 id=\"安装哨兵\"><a href=\"#安装哨兵\" class=\"headerlink\" title=\"安装哨兵\"></a>安装哨兵</h4><p>哨兵与redis在同一服务器下，无需安装，redis自带。</p>\n<p>若与redis不在统一服务器下，可参考上redis安装1-4步骤。</p>\n<h4 id=\"修改配置（每个哨兵配置，除监听端口外，其他保持一致）\"><a href=\"#修改配置（每个哨兵配置，除监听端口外，其他保持一致）\" class=\"headerlink\" title=\"修改配置（每个哨兵配置，除监听端口外，其他保持一致）\"></a>修改配置（每个哨兵配置，除监听端口外，其他保持一致）</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp/redis-3.2.11</span><br></pre></td></tr></table></figure>\n<p>复制配置到 etc目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp sentinel.conf /usr/local/redis/etc/sentinel.conf</span><br><span class=\"line\"></span><br><span class=\"line\">vi /usr/local/redis/etc/sentinel.conf</span><br><span class=\"line\"></span><br><span class=\"line\">增加</span><br><span class=\"line\"></span><br><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">端口是 26379</span><br><span class=\"line\"></span><br><span class=\"line\">增加：</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/sentinel.log</span><br><span class=\"line\"></span><br><span class=\"line\">搜索 sentinel monitor  下面增加</span><br><span class=\"line\"></span><br><span class=\"line\">sentinel monitor mymaster 172.20.10.12 6379 2</span><br><span class=\"line\"></span><br><span class=\"line\">对sentinel monitor mymaster 192.168.81.129 6379 2</span><br></pre></td></tr></table></figure>\n<p>解释：<br>mymaster ：为主服务器起的名字；</p>\n<p>192.168.81.129 6379：主服务器的ip和端口号</p>\n<p>2：代表有2个哨兵认为主服务器主观下线时，则认为主服务器是客观下线了，可以执行主从切换，并进行故障转移操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">搜索 auth-pass  下面增加ps</span><br><span class=\"line\">sentinel auth-pass mymaster password</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、集群启动\"><a href=\"#2、集群启动\" class=\"headerlink\" title=\"2、集群启动\"></a>2、集群启动</h2><h3 id=\"启动redis集群：\"><a href=\"#启动redis集群：\" class=\"headerlink\" title=\"启动redis集群：\"></a>启动redis集群：</h3><h4 id=\"服务器A：\"><a href=\"#服务器A：\" class=\"headerlink\" title=\"服务器A：\"></a>服务器A：</h4><p>redis – 6379</p>\n<p>哨兵-26379</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h4 id=\"服务器B：\"><a href=\"#服务器B：\" class=\"headerlink\" title=\"服务器B：\"></a>服务器B：</h4><p>redis – 6380</p>\n<p>哨兵-26380</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h4 id=\"服务器C：\"><a href=\"#服务器C：\" class=\"headerlink\" title=\"服务器C：\"></a>服务器C：</h4><p>redis – 6381</p>\n<p>哨兵-26381</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h3 id=\"启动哨兵集群：\"><a href=\"#启动哨兵集群：\" class=\"headerlink\" title=\"启动哨兵集群：\"></a>启动哨兵集群：</h3><h4 id=\"服务器A：-1\"><a href=\"#服务器A：-1\" class=\"headerlink\" title=\"服务器A：\"></a>服务器A：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h4 id=\"服务器B：-1\"><a href=\"#服务器B：-1\" class=\"headerlink\" title=\"服务器B：\"></a>服务器B：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h4 id=\"服务器C：-1\"><a href=\"#服务器C：-1\" class=\"headerlink\" title=\"服务器C：\"></a>服务器C：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h2 id=\"3、安装验证\"><a href=\"#3、安装验证\" class=\"headerlink\" title=\"3、安装验证\"></a>3、安装验证</h2><h3 id=\"集群部署验证\"><a href=\"#集群部署验证\" class=\"headerlink\" title=\"集群部署验证\"></a>集群部署验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/redis/bin/redis-cli</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6379 auth password</span><br><span class=\"line\"></span><br><span class=\"line\">  OK</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6379 info replication</span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\"></span><br><span class=\"line\">role:master</span><br><span class=\"line\"></span><br><span class=\"line\">connected\\_slaves:2</span><br><span class=\"line\"></span><br><span class=\"line\">slave0:ip=172.17.0.1,port=6380,state=online,offset=407,lag=1</span><br><span class=\"line\"></span><br><span class=\"line\">slave1:ip=172.17.0.1,port=6381,state=online,offset=407,lag=1</span><br><span class=\"line\"></span><br><span class=\"line\">master\\_repl\\_offset:407</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_active:1</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_size:1048576</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_first\\_byte\\_offset:2</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_histlen:406</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询验证\"><a href=\"#查询验证\" class=\"headerlink\" title=\"查询验证\"></a>查询验证</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/redis/bin/redis-cli -h 172.20.10.12 -p 6380</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6380 auth password</span><br><span class=\"line\"></span><br><span class=\"line\">  OK</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6380 keys \\*</span><br><span class=\"line\"></span><br><span class=\"line\">  (empty list or set)</span><br></pre></td></tr></table></figure>\n<h4 id=\"新增验证\"><a href=\"#新增验证\" class=\"headerlink\" title=\"新增验证\"></a>新增验证</h4><p>无</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h1><blockquote>\n<p>本文用于Redis的部署安装<br>配置文件内容需根据实际情况进行设置<br>本文为Sentinel哨兵模式的集群搭建，若需Cluster集群模式，可查看Redis安装部署内容，集群安装不适合。<br>","more":"</p>\n</blockquote>\n<h1 id=\"一、部署说明\"><a href=\"#一、部署说明\" class=\"headerlink\" title=\"一、部署说明\"></a>一、部署说明</h1><h2 id=\"集群信息\"><a href=\"#集群信息\" class=\"headerlink\" title=\"集群信息\"></a>集群信息</h2><ul>\n<li><p>集群：1主2从</p>\n</li>\n<li><p>master：主服务器</p>\n</li>\n<li><p>slave：从服务器</p>\n</li>\n</ul>\n<p>同步时间间隔：1s。每秒中，slave从master进行数据同步操作。</p>\n<h2 id=\"硬件配置要求\"><a href=\"#硬件配置要求\" class=\"headerlink\" title=\"硬件配置要求\"></a>硬件配置要求</h2><table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CPU</td>\n<td>4c*2.4g</td>\n</tr>\n<tr>\n<td>内存</td>\n<td>32g</td>\n</tr>\n<tr>\n<td>磁盘</td>\n<td>1000G</td>\n</tr>\n<tr>\n<td>系统版本</td>\n<td>Redhat 7.3</td>\n</tr>\n<tr>\n<td>Redis版本</td>\n<td>3.2.11</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>哨兵集群：Redis-Sentiel</li>\n</ul>\n<p>相互服务发现机制，通过选举确定master是否可用。</p>\n<p>选举配置：2。意味着3台中只要有两台无法与master通讯时，进行切换master操作。</p>\n<ul>\n<li>读写分离</li>\n</ul>\n<p>Master作为写服务器，Salve作为读服务器。通过数据同步，保证主从数据一致。</p>\n<h1 id=\"二、安装部署\"><a href=\"#二、安装部署\" class=\"headerlink\" title=\"二、安装部署\"></a>二、安装部署</h1><h2 id=\"1、redis安装部署步骤\"><a href=\"#1、redis安装部署步骤\" class=\"headerlink\" title=\"1、redis安装部署步骤\"></a>1、redis安装部署步骤</h2><h3 id=\"Master节点安装\"><a href=\"#Master节点安装\" class=\"headerlink\" title=\"Master节点安装\"></a>Master节点安装</h3><h4 id=\"1、安装系统依赖包\"><a href=\"#1、安装系统依赖包\" class=\"headerlink\" title=\"1、安装系统依赖包\"></a>1、安装系统依赖包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install --downloadonly --downloaddir=/tmp/download</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make telnet ruby-devel ruby-irb ruby-libs ruby-rdoc ruby rubygems-devel rubygems</span><br></pre></td></tr></table></figure>\n<h4 id=\"2、安装ruby包\"><a href=\"#2、安装ruby包\" class=\"headerlink\" title=\"2、安装ruby包\"></a>2、安装ruby包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install centos-release-scl-rh centos-release-scl</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/\\]$/\\]\\npriority=10/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl.repo</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i -e s/enabled=1/enabled=0/g /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo</span><br><span class=\"line\"></span><br><span class=\"line\">yum --enablerepo=centos-sclo-rh -y install rh-ruby22</span><br><span class=\"line\"></span><br><span class=\"line\">scl enable rh-ruby22 bash</span><br><span class=\"line\"></span><br><span class=\"line\">ruby –v</span><br></pre></td></tr></table></figure>\n<h4 id=\"3、安装reids-ruby控制包\"><a href=\"#3、安装reids-ruby控制包\" class=\"headerlink\" title=\"3、安装reids ruby控制包\"></a>3、安装reids ruby控制包</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、安装redis\"><a href=\"#4、安装redis\" class=\"headerlink\" title=\"4、安装redis\"></a>4、安装redis</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd  /tmp</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y wget</span><br><span class=\"line\"></span><br><span class=\"line\">wget http://download.redis.io/releases/redis-3.2.11.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxf redis-3.2.11.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">cd redis-3.2.11</span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">cd src &amp;amp;&amp;amp; make install PREFIX=/usr/local/redis</span><br><span class=\"line\"></span><br><span class=\"line\">cd ..</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /usr/local/redis/etc</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /usr/local/redis/db</span><br><span class=\"line\"></span><br><span class=\"line\">cp redis.conf /usr/local/redis/etc/</span><br><span class=\"line\"></span><br><span class=\"line\">cp ./src/redis-trib.rb /usr/local/redis/bin/</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、修改配置文件\"><a href=\"#5、修改配置文件\" class=\"headerlink\" title=\"5、修改配置文件\"></a>5、修改配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/redis/etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信</span><br><span class=\"line\"></span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes #用守护模式启动</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile /var/run/redis\\_6379.pid #不同机器PID文件不一样，我们用7001-7006 #可以用同一个，但是为了统一还是建议改成不同的</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/redis.log</span><br><span class=\"line\"></span><br><span class=\"line\">dir /usr/local/redis/db/</span><br><span class=\"line\"></span><br><span class=\"line\">masterauth password</span><br><span class=\"line\"></span><br><span class=\"line\">requirepass password</span><br><span class=\"line\"></span><br><span class=\"line\">appendonly yes #开启AOF模式</span><br></pre></td></tr></table></figure>\n<h3 id=\"Slave节点安装\"><a href=\"#Slave节点安装\" class=\"headerlink\" title=\"Slave节点安装\"></a>Slave节点安装</h3><h4 id=\"同上1-4\"><a href=\"#同上1-4\" class=\"headerlink\" title=\"同上1-4\"></a>同上1-4</h4><h4 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/redis/etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#bind 127.0.0.1 #这里注释掉，否则会导致其它节点无法与本节点通信</span><br><span class=\"line\"></span><br><span class=\"line\">protected-mode yes</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes #用守护模式启动</span><br><span class=\"line\"></span><br><span class=\"line\">port 6379 #修改为port 6380</span><br><span class=\"line\"></span><br><span class=\"line\">#增加 slaveof 192.168.81.129 6380</span><br><span class=\"line\"></span><br><span class=\"line\">slaveof 172.20.10.12 6379</span><br><span class=\"line\"></span><br><span class=\"line\">pidfile /var/run/redis\\_6380.pid #不同机器PID文件不一样， #可以用同一个，但是为了统一还是建议改成不同的</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/redis.log</span><br><span class=\"line\"></span><br><span class=\"line\">dir /usr/local/redis/db/</span><br><span class=\"line\"></span><br><span class=\"line\">masterauth password</span><br><span class=\"line\"></span><br><span class=\"line\">requirepass password</span><br><span class=\"line\"></span><br><span class=\"line\">appendonly yes #开启AOF模式</span><br></pre></td></tr></table></figure>\n<p>增加requirepass password，这是设置redis客户端或者远程机器连接redis服务器需要的密码，这里同样设为redis（6381的密码也设为redis）</p>\n<h3 id=\"Sential哨兵安装\"><a href=\"#Sential哨兵安装\" class=\"headerlink\" title=\"Sential哨兵安装\"></a>Sential哨兵安装</h3><h4 id=\"安装哨兵\"><a href=\"#安装哨兵\" class=\"headerlink\" title=\"安装哨兵\"></a>安装哨兵</h4><p>哨兵与redis在同一服务器下，无需安装，redis自带。</p>\n<p>若与redis不在统一服务器下，可参考上redis安装1-4步骤。</p>\n<h4 id=\"修改配置（每个哨兵配置，除监听端口外，其他保持一致）\"><a href=\"#修改配置（每个哨兵配置，除监听端口外，其他保持一致）\" class=\"headerlink\" title=\"修改配置（每个哨兵配置，除监听端口外，其他保持一致）\"></a>修改配置（每个哨兵配置，除监听端口外，其他保持一致）</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp/redis-3.2.11</span><br></pre></td></tr></table></figure>\n<p>复制配置到 etc目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp sentinel.conf /usr/local/redis/etc/sentinel.conf</span><br><span class=\"line\"></span><br><span class=\"line\">vi /usr/local/redis/etc/sentinel.conf</span><br><span class=\"line\"></span><br><span class=\"line\">增加</span><br><span class=\"line\"></span><br><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">端口是 26379</span><br><span class=\"line\"></span><br><span class=\"line\">增加：</span><br><span class=\"line\"></span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\"></span><br><span class=\"line\">logfile /var/log/sentinel.log</span><br><span class=\"line\"></span><br><span class=\"line\">搜索 sentinel monitor  下面增加</span><br><span class=\"line\"></span><br><span class=\"line\">sentinel monitor mymaster 172.20.10.12 6379 2</span><br><span class=\"line\"></span><br><span class=\"line\">对sentinel monitor mymaster 192.168.81.129 6379 2</span><br></pre></td></tr></table></figure>\n<p>解释：<br>mymaster ：为主服务器起的名字；</p>\n<p>192.168.81.129 6379：主服务器的ip和端口号</p>\n<p>2：代表有2个哨兵认为主服务器主观下线时，则认为主服务器是客观下线了，可以执行主从切换，并进行故障转移操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">搜索 auth-pass  下面增加ps</span><br><span class=\"line\">sentinel auth-pass mymaster password</span><br></pre></td></tr></table></figure>\n<h2 id=\"2、集群启动\"><a href=\"#2、集群启动\" class=\"headerlink\" title=\"2、集群启动\"></a>2、集群启动</h2><h3 id=\"启动redis集群：\"><a href=\"#启动redis集群：\" class=\"headerlink\" title=\"启动redis集群：\"></a>启动redis集群：</h3><h4 id=\"服务器A：\"><a href=\"#服务器A：\" class=\"headerlink\" title=\"服务器A：\"></a>服务器A：</h4><p>redis – 6379</p>\n<p>哨兵-26379</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h4 id=\"服务器B：\"><a href=\"#服务器B：\" class=\"headerlink\" title=\"服务器B：\"></a>服务器B：</h4><p>redis – 6380</p>\n<p>哨兵-26380</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h4 id=\"服务器C：\"><a href=\"#服务器C：\" class=\"headerlink\" title=\"服务器C：\"></a>服务器C：</h4><p>redis – 6381</p>\n<p>哨兵-26381</p>\n<p>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</p>\n<h3 id=\"启动哨兵集群：\"><a href=\"#启动哨兵集群：\" class=\"headerlink\" title=\"启动哨兵集群：\"></a>启动哨兵集群：</h3><h4 id=\"服务器A：-1\"><a href=\"#服务器A：-1\" class=\"headerlink\" title=\"服务器A：\"></a>服务器A：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h4 id=\"服务器B：-1\"><a href=\"#服务器B：-1\" class=\"headerlink\" title=\"服务器B：\"></a>服务器B：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h4 id=\"服务器C：-1\"><a href=\"#服务器C：-1\" class=\"headerlink\" title=\"服务器C：\"></a>服务器C：</h4><p>/usr/local/redis/bin/redis-sentinel /usr/local/redis/etc/sentinel.conf</p>\n<h2 id=\"3、安装验证\"><a href=\"#3、安装验证\" class=\"headerlink\" title=\"3、安装验证\"></a>3、安装验证</h2><h3 id=\"集群部署验证\"><a href=\"#集群部署验证\" class=\"headerlink\" title=\"集群部署验证\"></a>集群部署验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/redis/bin/redis-cli</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6379 auth password</span><br><span class=\"line\"></span><br><span class=\"line\">  OK</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6379 info replication</span><br><span class=\"line\"></span><br><span class=\"line\"># Replication</span><br><span class=\"line\"></span><br><span class=\"line\">role:master</span><br><span class=\"line\"></span><br><span class=\"line\">connected\\_slaves:2</span><br><span class=\"line\"></span><br><span class=\"line\">slave0:ip=172.17.0.1,port=6380,state=online,offset=407,lag=1</span><br><span class=\"line\"></span><br><span class=\"line\">slave1:ip=172.17.0.1,port=6381,state=online,offset=407,lag=1</span><br><span class=\"line\"></span><br><span class=\"line\">master\\_repl\\_offset:407</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_active:1</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_size:1048576</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_first\\_byte\\_offset:2</span><br><span class=\"line\"></span><br><span class=\"line\">repl\\_backlog\\_histlen:406</span><br></pre></td></tr></table></figure>\n<h4 id=\"查询验证\"><a href=\"#查询验证\" class=\"headerlink\" title=\"查询验证\"></a>查询验证</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/redis/bin/redis-cli -h 172.20.10.12 -p 6380</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6380 auth password</span><br><span class=\"line\"></span><br><span class=\"line\">  OK</span><br><span class=\"line\"></span><br><span class=\"line\">  127.0.0.1:6380 keys \\*</span><br><span class=\"line\"></span><br><span class=\"line\">  (empty list or set)</span><br></pre></td></tr></table></figure>\n<h4 id=\"新增验证\"><a href=\"#新增验证\" class=\"headerlink\" title=\"新增验证\"></a>新增验证</h4><p>无</p>"},{"title":"【项目】记Redis使用实践-介绍","date":"2018-06-18T10:41:03.000Z","copyright":true,"_content":"# 大纲\n* 一、项目背景\n* 二、数据结构\n* 三、Redis使用\n* 四、Redis数据同步\n* 五、特别场景说明\n* 六、总结优化\n\n# 感受\n  从今年的3月底，接收到一个蛮有挑战的任务，就是用redis解决目前项目的一个额度服务需求。\n  领导很简单地说了几句，用Redis就可以解决，当然我也觉得就一个内存的k-v数据库，应该也还好，就接收了这个任务。\n<!-- more -->\n  接触发现，Redis涉及的面不少，不单单数据结构，还有深入需求后发现，其实数据结构也是一个很大的挑战，因为单单同步表数据，量有点大。走序列化，跟已有的技术平台不太兼容，最后只能选择重新设计数据结构，进行映射。\n  最后，经过几个月的学习研究。从一个没有接触过Redis的小白，总算折腾出了一个以Redis作为缓存的额度服务系统。希望能够分享出来。\n\n","source":"_posts/project-redis-s00.md","raw":"---\ntitle:  【项目】记Redis使用实践-介绍\ndate: 2018-06-18 18:41:03\ntags: \n   - 技术 \n   - redis \n   - 教程\ncategories:\n    - 技术\n    - 实践\ncopyright: true\n---\n# 大纲\n* 一、项目背景\n* 二、数据结构\n* 三、Redis使用\n* 四、Redis数据同步\n* 五、特别场景说明\n* 六、总结优化\n\n# 感受\n  从今年的3月底，接收到一个蛮有挑战的任务，就是用redis解决目前项目的一个额度服务需求。\n  领导很简单地说了几句，用Redis就可以解决，当然我也觉得就一个内存的k-v数据库，应该也还好，就接收了这个任务。\n<!-- more -->\n  接触发现，Redis涉及的面不少，不单单数据结构，还有深入需求后发现，其实数据结构也是一个很大的挑战，因为单单同步表数据，量有点大。走序列化，跟已有的技术平台不太兼容，最后只能选择重新设计数据结构，进行映射。\n  最后，经过几个月的学习研究。从一个没有接触过Redis的小白，总算折腾出了一个以Redis作为缓存的额度服务系统。希望能够分享出来。\n\n","slug":"project-redis-s00","published":1,"updated":"2018-09-05T18:05:38.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlpgr4hr00026ouab0p2vgxd","content":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li>一、项目背景</li>\n<li>二、数据结构</li>\n<li>三、Redis使用</li>\n<li>四、Redis数据同步</li>\n<li>五、特别场景说明</li>\n<li>六、总结优化</li>\n</ul>\n<h1 id=\"感受\"><a href=\"#感受\" class=\"headerlink\" title=\"感受\"></a>感受</h1><p>  从今年的3月底，接收到一个蛮有挑战的任务，就是用redis解决目前项目的一个额度服务需求。<br>  领导很简单地说了几句，用Redis就可以解决，当然我也觉得就一个内存的k-v数据库，应该也还好，就接收了这个任务。<br><a id=\"more\"></a><br>  接触发现，Redis涉及的面不少，不单单数据结构，还有深入需求后发现，其实数据结构也是一个很大的挑战，因为单单同步表数据，量有点大。走序列化，跟已有的技术平台不太兼容，最后只能选择重新设计数据结构，进行映射。<br>  最后，经过几个月的学习研究。从一个没有接触过Redis的小白，总算折腾出了一个以Redis作为缓存的额度服务系统。希望能够分享出来。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li>一、项目背景</li>\n<li>二、数据结构</li>\n<li>三、Redis使用</li>\n<li>四、Redis数据同步</li>\n<li>五、特别场景说明</li>\n<li>六、总结优化</li>\n</ul>\n<h1 id=\"感受\"><a href=\"#感受\" class=\"headerlink\" title=\"感受\"></a>感受</h1><p>  从今年的3月底，接收到一个蛮有挑战的任务，就是用redis解决目前项目的一个额度服务需求。<br>  领导很简单地说了几句，用Redis就可以解决，当然我也觉得就一个内存的k-v数据库，应该也还好，就接收了这个任务。<br>","more":"<br>  接触发现，Redis涉及的面不少，不单单数据结构，还有深入需求后发现，其实数据结构也是一个很大的挑战，因为单单同步表数据，量有点大。走序列化，跟已有的技术平台不太兼容，最后只能选择重新设计数据结构，进行映射。<br>  最后，经过几个月的学习研究。从一个没有接触过Redis的小白，总算折腾出了一个以Redis作为缓存的额度服务系统。希望能够分享出来。</p>"},{"title":"【实践】记Redis使用实践一：项目背景","date":"2018-06-18T10:41:03.000Z","copyright":true,"_content":"\n# 背景 \n作为程序员一个，多年来的工作习惯，啥都是要讲需求背景，所以直接来干货。\n这次我们涉及的是支付系统中的一个功能服务，在一家大行中提供全行的交易限额控制服务。\n其中这个额度不单单只是一维的限制，还需要根据不同的场景和对接系统，提供多个不同纬度的额度限制。\n简单概括。但是实践起来又是另一回事。\n<!-- more --> \n# 过程\n## 划重点\n当收到需求，常习惯看一遍划重点。\n* 数据量\n* 并发量\n* 复杂度\n* 一致性\n* 多维度\n\n## 分析\n### 数据量\n存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。\n\n|  额度A  |  额度Ｂ  |  额度C  |\n| --- | --- | --- |\n|  基数x2  |  基数x42x6  |  基数x110 |\n|  1亿  |  一百多亿  |  几百亿  |\n当然，基本不太可能全部量都同时存在，不过基于进行评估需要，仍然以此作为评估的基数。\n\n### 并发量\n由于属于支付系统，要求的TPS是2000左右。在双11或者秒杀活动中，这个TPS可能还会进一步提升。 因此初步设计需要约5000TPS左右\n\n### 复杂度\n对于系统的需求其实比较简单，比起那些复杂的支付逻辑来说，这个还是比较简单。但是由于考虑的是系统的通用性和扩展性，这个就没法根据需求来硬编码了。\n\n### 一致性\n其实这个在数据库来说，意思就是事务一致性。因为需要对于多个额度同时进行控制，所以如何保证多个额度能一起累计或一起撤回，是考虑的重要规则之一。\n\n### 多维度\n也是基于需求背景，结合复杂度和一致性考虑，如何处理不同纬度的额度限制，并且能够具有一定的扩展性。\n\n## 设计\n有了上面的需求硬指标，我们就开始着手设计。\n主要考虑的重点就是性能和数据量\n如何在大的用户基数下也能兼顾高并发的访问性能，相信很多人都会有这个疑问。现在介绍一下我们的思路。\n### 性能\n内存存储，考虑到这么高的并发访问，而且存在高读写的要求，基于这个我们决定使用Redis作为我们数据的存储。\n\n### 数据量\n既然选择了Redis，那就从Redis开始着手进行分析解决。\n内存能不能存放这么大的数据量呢？答案是可以。不过合不合理，适不适合，又是另一件事了。\n在Redis的设计中，有几个通用的规范，来减少内存的开销。\n* 避免大key\n* 避免key和val过长\n* 尽量使用ziplist数据结构\n\n# 总结\n基本介绍了项目的背景和设计所需考虑的一些关键点，下一章节将详细说明一下数据结构。\n\n","source":"_posts/project-redis-s01.md","raw":"---\ntitle:  【实践】记Redis使用实践一：项目背景\ndate: 2018-06-18 18:41:03\ntags: \n  - 技术 \n  - redis \n  - 教程\ncategories:\n    - 技术\n    - 实践\ncopyright: true\n---\n\n# 背景 \n作为程序员一个，多年来的工作习惯，啥都是要讲需求背景，所以直接来干货。\n这次我们涉及的是支付系统中的一个功能服务，在一家大行中提供全行的交易限额控制服务。\n其中这个额度不单单只是一维的限制，还需要根据不同的场景和对接系统，提供多个不同纬度的额度限制。\n简单概括。但是实践起来又是另一回事。\n<!-- more --> \n# 过程\n## 划重点\n当收到需求，常习惯看一遍划重点。\n* 数据量\n* 并发量\n* 复杂度\n* 一致性\n* 多维度\n\n## 分析\n### 数据量\n存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。\n\n|  额度A  |  额度Ｂ  |  额度C  |\n| --- | --- | --- |\n|  基数x2  |  基数x42x6  |  基数x110 |\n|  1亿  |  一百多亿  |  几百亿  |\n当然，基本不太可能全部量都同时存在，不过基于进行评估需要，仍然以此作为评估的基数。\n\n### 并发量\n由于属于支付系统，要求的TPS是2000左右。在双11或者秒杀活动中，这个TPS可能还会进一步提升。 因此初步设计需要约5000TPS左右\n\n### 复杂度\n对于系统的需求其实比较简单，比起那些复杂的支付逻辑来说，这个还是比较简单。但是由于考虑的是系统的通用性和扩展性，这个就没法根据需求来硬编码了。\n\n### 一致性\n其实这个在数据库来说，意思就是事务一致性。因为需要对于多个额度同时进行控制，所以如何保证多个额度能一起累计或一起撤回，是考虑的重要规则之一。\n\n### 多维度\n也是基于需求背景，结合复杂度和一致性考虑，如何处理不同纬度的额度限制，并且能够具有一定的扩展性。\n\n## 设计\n有了上面的需求硬指标，我们就开始着手设计。\n主要考虑的重点就是性能和数据量\n如何在大的用户基数下也能兼顾高并发的访问性能，相信很多人都会有这个疑问。现在介绍一下我们的思路。\n### 性能\n内存存储，考虑到这么高的并发访问，而且存在高读写的要求，基于这个我们决定使用Redis作为我们数据的存储。\n\n### 数据量\n既然选择了Redis，那就从Redis开始着手进行分析解决。\n内存能不能存放这么大的数据量呢？答案是可以。不过合不合理，适不适合，又是另一件事了。\n在Redis的设计中，有几个通用的规范，来减少内存的开销。\n* 避免大key\n* 避免key和val过长\n* 尽量使用ziplist数据结构\n\n# 总结\n基本介绍了项目的背景和设计所需考虑的一些关键点，下一章节将详细说明一下数据结构。\n\n","slug":"project-redis-s01","published":1,"updated":"2018-09-05T18:05:47.128Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlpgr4hw00066ouas0pnwtoe","content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为程序员一个，多年来的工作习惯，啥都是要讲需求背景，所以直接来干货。<br>这次我们涉及的是支付系统中的一个功能服务，在一家大行中提供全行的交易限额控制服务。<br>其中这个额度不单单只是一维的限制，还需要根据不同的场景和对接系统，提供多个不同纬度的额度限制。<br>简单概括。但是实践起来又是另一回事。<br><a id=\"more\"></a> </p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><h2 id=\"划重点\"><a href=\"#划重点\" class=\"headerlink\" title=\"划重点\"></a>划重点</h2><p>当收到需求，常习惯看一遍划重点。</p>\n<ul>\n<li>数据量</li>\n<li>并发量</li>\n<li>复杂度</li>\n<li>一致性</li>\n<li>多维度</li>\n</ul>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><h3 id=\"数据量\"><a href=\"#数据量\" class=\"headerlink\" title=\"数据量\"></a>数据量</h3><p>存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。</p>\n<table>\n<thead>\n<tr>\n<th>额度A</th>\n<th>额度Ｂ</th>\n<th>额度C</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>基数x2</td>\n<td>基数x42x6</td>\n<td>基数x110</td>\n</tr>\n<tr>\n<td>1亿</td>\n<td>一百多亿</td>\n<td>几百亿</td>\n</tr>\n</tbody>\n</table>\n<p>当然，基本不太可能全部量都同时存在，不过基于进行评估需要，仍然以此作为评估的基数。</p>\n<h3 id=\"并发量\"><a href=\"#并发量\" class=\"headerlink\" title=\"并发量\"></a>并发量</h3><p>由于属于支付系统，要求的TPS是2000左右。在双11或者秒杀活动中，这个TPS可能还会进一步提升。 因此初步设计需要约5000TPS左右</p>\n<h3 id=\"复杂度\"><a href=\"#复杂度\" class=\"headerlink\" title=\"复杂度\"></a>复杂度</h3><p>对于系统的需求其实比较简单，比起那些复杂的支付逻辑来说，这个还是比较简单。但是由于考虑的是系统的通用性和扩展性，这个就没法根据需求来硬编码了。</p>\n<h3 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h3><p>其实这个在数据库来说，意思就是事务一致性。因为需要对于多个额度同时进行控制，所以如何保证多个额度能一起累计或一起撤回，是考虑的重要规则之一。</p>\n<h3 id=\"多维度\"><a href=\"#多维度\" class=\"headerlink\" title=\"多维度\"></a>多维度</h3><p>也是基于需求背景，结合复杂度和一致性考虑，如何处理不同纬度的额度限制，并且能够具有一定的扩展性。</p>\n<h2 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h2><p>有了上面的需求硬指标，我们就开始着手设计。<br>主要考虑的重点就是性能和数据量<br>如何在大的用户基数下也能兼顾高并发的访问性能，相信很多人都会有这个疑问。现在介绍一下我们的思路。</p>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p>内存存储，考虑到这么高的并发访问，而且存在高读写的要求，基于这个我们决定使用Redis作为我们数据的存储。</p>\n<h3 id=\"数据量-1\"><a href=\"#数据量-1\" class=\"headerlink\" title=\"数据量\"></a>数据量</h3><p>既然选择了Redis，那就从Redis开始着手进行分析解决。<br>内存能不能存放这么大的数据量呢？答案是可以。不过合不合理，适不适合，又是另一件事了。<br>在Redis的设计中，有几个通用的规范，来减少内存的开销。</p>\n<ul>\n<li>避免大key</li>\n<li>避免key和val过长</li>\n<li>尽量使用ziplist数据结构</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>基本介绍了项目的背景和设计所需考虑的一些关键点，下一章节将详细说明一下数据结构。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>作为程序员一个，多年来的工作习惯，啥都是要讲需求背景，所以直接来干货。<br>这次我们涉及的是支付系统中的一个功能服务，在一家大行中提供全行的交易限额控制服务。<br>其中这个额度不单单只是一维的限制，还需要根据不同的场景和对接系统，提供多个不同纬度的额度限制。<br>简单概括。但是实践起来又是另一回事。<br>","more":"</p>\n<h1 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h1><h2 id=\"划重点\"><a href=\"#划重点\" class=\"headerlink\" title=\"划重点\"></a>划重点</h2><p>当收到需求，常习惯看一遍划重点。</p>\n<ul>\n<li>数据量</li>\n<li>并发量</li>\n<li>复杂度</li>\n<li>一致性</li>\n<li>多维度</li>\n</ul>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><h3 id=\"数据量\"><a href=\"#数据量\" class=\"headerlink\" title=\"数据量\"></a>数据量</h3><p>存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。</p>\n<table>\n<thead>\n<tr>\n<th>额度A</th>\n<th>额度Ｂ</th>\n<th>额度C</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>基数x2</td>\n<td>基数x42x6</td>\n<td>基数x110</td>\n</tr>\n<tr>\n<td>1亿</td>\n<td>一百多亿</td>\n<td>几百亿</td>\n</tr>\n</tbody>\n</table>\n<p>当然，基本不太可能全部量都同时存在，不过基于进行评估需要，仍然以此作为评估的基数。</p>\n<h3 id=\"并发量\"><a href=\"#并发量\" class=\"headerlink\" title=\"并发量\"></a>并发量</h3><p>由于属于支付系统，要求的TPS是2000左右。在双11或者秒杀活动中，这个TPS可能还会进一步提升。 因此初步设计需要约5000TPS左右</p>\n<h3 id=\"复杂度\"><a href=\"#复杂度\" class=\"headerlink\" title=\"复杂度\"></a>复杂度</h3><p>对于系统的需求其实比较简单，比起那些复杂的支付逻辑来说，这个还是比较简单。但是由于考虑的是系统的通用性和扩展性，这个就没法根据需求来硬编码了。</p>\n<h3 id=\"一致性\"><a href=\"#一致性\" class=\"headerlink\" title=\"一致性\"></a>一致性</h3><p>其实这个在数据库来说，意思就是事务一致性。因为需要对于多个额度同时进行控制，所以如何保证多个额度能一起累计或一起撤回，是考虑的重要规则之一。</p>\n<h3 id=\"多维度\"><a href=\"#多维度\" class=\"headerlink\" title=\"多维度\"></a>多维度</h3><p>也是基于需求背景，结合复杂度和一致性考虑，如何处理不同纬度的额度限制，并且能够具有一定的扩展性。</p>\n<h2 id=\"设计\"><a href=\"#设计\" class=\"headerlink\" title=\"设计\"></a>设计</h2><p>有了上面的需求硬指标，我们就开始着手设计。<br>主要考虑的重点就是性能和数据量<br>如何在大的用户基数下也能兼顾高并发的访问性能，相信很多人都会有这个疑问。现在介绍一下我们的思路。</p>\n<h3 id=\"性能\"><a href=\"#性能\" class=\"headerlink\" title=\"性能\"></a>性能</h3><p>内存存储，考虑到这么高的并发访问，而且存在高读写的要求，基于这个我们决定使用Redis作为我们数据的存储。</p>\n<h3 id=\"数据量-1\"><a href=\"#数据量-1\" class=\"headerlink\" title=\"数据量\"></a>数据量</h3><p>既然选择了Redis，那就从Redis开始着手进行分析解决。<br>内存能不能存放这么大的数据量呢？答案是可以。不过合不合理，适不适合，又是另一件事了。<br>在Redis的设计中，有几个通用的规范，来减少内存的开销。</p>\n<ul>\n<li>避免大key</li>\n<li>避免key和val过长</li>\n<li>尽量使用ziplist数据结构</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>基本介绍了项目的背景和设计所需考虑的一些关键点，下一章节将详细说明一下数据结构。</p>"},{"title":"【分享】限额控制的Redis实践","date":"2018-07-22T15:03:03.000Z","copyright":true,"_content":"\n# 大纲\n* [需求](#overview)\n* [思考与方案](#useage)\n* [实现与困难](#stage)\n* [效果与总结](#summary)\n\n# 一、需求\n<a id=\"overview\"></a>\n* 需求比较简单，主要是实现多个维度的客户限额控制需求。每个限额的控制有多个的维度进行分别累计控制，还包括了单笔、日累计和月累计的方式。\n* 需要支持多个不同接入系统，而且需要考虑未来的业务扩展性。\n* 能够具有较强的实时性、响应性，而且能够稳定可持续运行。\n<!-- more --> \n# 二、思考与方案\n<a id=\"useage\"></a>\n由于考虑这次项目是在支付系统中使用，常用场景是日常的高访问的支付场景以及一些秒杀、双十一等促销场景，而且涉及具有较大规模的基础用户量。自然而然，就想到了使用内存数据库进行处理。\n\n## 缓存or数据库\n内存数据库，顾名思义就是把数据放在内存中，直接把内存当作数据库使用。缓存，是内存数据库的应用场景之一，将进程使用的数据存在内存，达到共享、快速访问、减少数据交互的作用。但缓存毕竟不是数据库，缓存是可重新加载可丢失，而数据库却必须支持持久化、高可用、一致性的。\n在项目初期，我们基本考虑把数据存放在内存中。但随着项目的推进，压力测试、验证等各方面的工作开展，我们发现直接使用内存作为数据库在不可丢失数据的场景下，是无法满足要求的。至少，为了保持整个内存数据库的高可用、持久化，也许我们需要更多其他的工作来达到。\n因此，我们最终定型存储结构是Redis当作数据缓存以达到高并发的读写要求，DB2作为持久化数据库，最终数据需同步到DB2为准，也跟市场主流的用法类似。\n\n## 选用Redis\n缓存方案：Redis、ehcache、kafka等很多不同的方案。考虑行里已有Redis的实施经验，而且Redis提供的数据类型更为丰富，最重要是Redis支持持久化和成熟的高可用方案，初步定型为Redis。\n\n# 三、实现与困难\n<a id=\"stage\"></a>\n万事起头难，从无到有的确需要经过很多不同的实践和验证。从开始以为Redis只是普通的get/set操作，常用的k-v结构存储之外，其实对于一个成熟可用的方案考虑的还不止这些。\n\n## 数据存储\n* 数据规模\n\n存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。\n\n|  额度A  |  额度Ｂ  |  额度C  |\n| --- | --- | --- |\n|  基数x2  |  基数x42  |  基数x110 |\n|  1亿  |  十多亿  |  几百亿  |\n\n* 数据结构\n\n在如何规模的数量下，对于数据库都需要采取各种方案来进行提高性能和访问速度，还有节省空间。更何况是存储量级只有硬盘十分之一不到的内存呢。 \n在项目初期，确定以Redis为数据存储，DB2为数据存储的方案，与大多的方案不太一样。大多的方案是Redis的数据结构与数据库的表结构一致，根据不同的key来定义或划分数据。\n\n数据库：\n\n```\nLimitRecord1(\nuserid,recordval1,...\n)\nLimitRecord2(\nuserid,condition2,recordva2,...\n)\n```\n方案一：\n\n```\nRedis：\nLimitRecord1:userid{\n    recordval1:value,\n    ...\n}\nLimitRecord2:userid:condition2{\n    recordval2:value,\n    ...\n}\n\n```\n方案二：\n\n```\nRedis:\nuserid:{\n    LimitRecord1:recordval1\n    LimitRecord2.condition2:recordval1\n}\n```\n\n至于那种方式更好，见仁见智，在此我们提供不同思路给大家思考。\n对于缓存方案，多读少写第一种方案更合适。以Redis作为存储方案二相对更加节省内存使用，更适合k-v的存储数据结构。\n\n## Redis字段优化\n \n 在日常中，缓存往往只是少量数据，如配置项、热点数据等，而本项目中，Redis承载的数据规模日常热点在几千万键的级别中，因此每一个小的字符串优化，效果都很明显也很重要。\n优化前：\n\n```\nlimitkey.userid.cardtype等组合\n```\n优化后：\n\n```\nl.u.c 等组合\n甚至有些改为1.2.3纯数字代替\n```\n的确我们同事说的，这可读性降低很多，不过面对寸金尺土的内存空间，这优化还是很必要。\n\n另外，在Redis内存不同的数据结构对于内存的使用大小也是天差地别。\n\n|  存储结构  |  数据量（万）  |  数据格式  |内存大小|rdb文件大小|\n| --- | --- | --- |---|---|\n|  hash  |  15000  |  ziplist |10.77G|1.6G\n|  hash  |  15000  |  hashtable  |20.62G|6.9G\n\n当然我们也做了很多其他不同的字段优化和测试，在此边幅有限不一一详述。\n\n## 事务处理与lua脚本\n由于涉及多个限额的累计或回退、多个限额值（日累计、月累计）的一致性要求，数据库可提供事务机制实现，在Redis中，又是如何实现的。\nRedis提供了基础的事务功能，不过涉及到锁的机制，因此对于开发要求比较高。另一方面，Redis本身每次操作都是原子性的，所以也可通过lua脚本实现。我们本次项目采取的是后者。\n\nlua脚本并不复杂，但是lua脚本类似数据库的存储过程，一旦执行，若存在死循环或者大数据量操作，对于Redis来说是致命的。因此不建议常用，也不建议滥用，我们组员很多时间都觉得，lua可以做，就可以避免多次访问Redis，减少开销。不过遇到此类场景，并没有一致性要求的，建议使用hmset、hmget等批操作，或者pipeline等方式进行访问，避免使用lua此类脚本，减少风险和排查难度。\n\n## Redis与数据库同步\n在文章开头，提到一点很重要，也是项目必须面对的，就是Redis究竟是作为数据库还是缓存，这对于数据落地、高可用等设计都会涉及。\n目前定位是Redis缓存、DB作为数据落地，因此如何把Redis中的数据同步到数据库也是我们纠结很久的困难点。\n\n### 同步机制\n在Redis本身是支持类似队列或订阅机制，意味着我们可以考虑使用这两个方式触发数据同步。\n但由于Redis的队列机制是不完整的，不完整指的是Redis并不是提供一个类似MQ、rabbitMQ等专门的队列机制，因此不建议Redis的队列服务与本身Redis的存储服务一同使用，有可能会导致队列堵塞而导致存储服务无法使用。\n因此，项目使用了公司平台本身的队列服务，Redis仍然作为缓冲服务，避免由于高并发量和突发大数据量而导致系统不可用。\n\n### 数据结构映射\n如何把Redis的存储数据与数据库表结构对应，也是我们面对的问题之一。因此大多的方式是，Redis当缓存或临时的热点数据，允许在一段周期后进行丢弃，也就是说可不用回写数据库，但本项目中的数据，最长的时间是月，这个是无法丢弃的。并且如何对于这么大的数据量在Redis中进行清理，也是一个难题。\n\n\n### 解决方案\n另一方面，本项目采取的数据结构与数据库表结构也不一致，无法直接从Redis的数据中回写数据库。\n我们的处理方式就是不进行同步，Redis和数据库单独管理。每次通讯请求，通过开关判断，开关用于判断使用Redis或者DB。当默认使用Redis时，程序将请求同步发送至Redis限额控制服务，当Redis处理结果成功后，将请求异步发送至平台队列中，DB限额控制服务将从队列获取信息进行处理。\n\n\n　![](http://oxigzlivh.bkt.clouddn.com/2018-07-22-15322700497055.jpg)\n\n\n# 四、效果与总结\n<a id=\"summary\"></a>\n目前项目仍在开发中准备投产，效果如何仍需结合生产的运行情况，我们再进一步总结和归纳经验。本项目在Redis中的前期做了不少的实践，不过更多没落到实处，主要集中在性能和用法上的实践。但在项目开展时会遇到不少的难题需要解决，特别结合复杂的业务场景下，无法使用关系型数据库进行数据关联查询，无法使用事务机制控制提交回滚，更无法使用索引主键等控制约束，都是我们缺乏思考的地方。\n下一步我们需要完善的是运维和监控，在追求速度的开发节奏和生产性能的当下，如何能够让快速的系统健康稳定运行，相对应的故障发现和自动化运维机制是必不可少的。期待下一次的分享。\n\n","source":"_posts/share-redis-summary20180722.md","raw":"---\ntitle:  【分享】限额控制的Redis实践\ndate: 2018-07-22 23:03:03\ntags: \n    - 技术 \n    - redis \n    - 项目\n    - 生产\ncategories:\n    - 技术\n    - 分享\ncopyright: true\n---\n\n# 大纲\n* [需求](#overview)\n* [思考与方案](#useage)\n* [实现与困难](#stage)\n* [效果与总结](#summary)\n\n# 一、需求\n<a id=\"overview\"></a>\n* 需求比较简单，主要是实现多个维度的客户限额控制需求。每个限额的控制有多个的维度进行分别累计控制，还包括了单笔、日累计和月累计的方式。\n* 需要支持多个不同接入系统，而且需要考虑未来的业务扩展性。\n* 能够具有较强的实时性、响应性，而且能够稳定可持续运行。\n<!-- more --> \n# 二、思考与方案\n<a id=\"useage\"></a>\n由于考虑这次项目是在支付系统中使用，常用场景是日常的高访问的支付场景以及一些秒杀、双十一等促销场景，而且涉及具有较大规模的基础用户量。自然而然，就想到了使用内存数据库进行处理。\n\n## 缓存or数据库\n内存数据库，顾名思义就是把数据放在内存中，直接把内存当作数据库使用。缓存，是内存数据库的应用场景之一，将进程使用的数据存在内存，达到共享、快速访问、减少数据交互的作用。但缓存毕竟不是数据库，缓存是可重新加载可丢失，而数据库却必须支持持久化、高可用、一致性的。\n在项目初期，我们基本考虑把数据存放在内存中。但随着项目的推进，压力测试、验证等各方面的工作开展，我们发现直接使用内存作为数据库在不可丢失数据的场景下，是无法满足要求的。至少，为了保持整个内存数据库的高可用、持久化，也许我们需要更多其他的工作来达到。\n因此，我们最终定型存储结构是Redis当作数据缓存以达到高并发的读写要求，DB2作为持久化数据库，最终数据需同步到DB2为准，也跟市场主流的用法类似。\n\n## 选用Redis\n缓存方案：Redis、ehcache、kafka等很多不同的方案。考虑行里已有Redis的实施经验，而且Redis提供的数据类型更为丰富，最重要是Redis支持持久化和成熟的高可用方案，初步定型为Redis。\n\n# 三、实现与困难\n<a id=\"stage\"></a>\n万事起头难，从无到有的确需要经过很多不同的实践和验证。从开始以为Redis只是普通的get/set操作，常用的k-v结构存储之外，其实对于一个成熟可用的方案考虑的还不止这些。\n\n## 数据存储\n* 数据规模\n\n存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。\n\n|  额度A  |  额度Ｂ  |  额度C  |\n| --- | --- | --- |\n|  基数x2  |  基数x42  |  基数x110 |\n|  1亿  |  十多亿  |  几百亿  |\n\n* 数据结构\n\n在如何规模的数量下，对于数据库都需要采取各种方案来进行提高性能和访问速度，还有节省空间。更何况是存储量级只有硬盘十分之一不到的内存呢。 \n在项目初期，确定以Redis为数据存储，DB2为数据存储的方案，与大多的方案不太一样。大多的方案是Redis的数据结构与数据库的表结构一致，根据不同的key来定义或划分数据。\n\n数据库：\n\n```\nLimitRecord1(\nuserid,recordval1,...\n)\nLimitRecord2(\nuserid,condition2,recordva2,...\n)\n```\n方案一：\n\n```\nRedis：\nLimitRecord1:userid{\n    recordval1:value,\n    ...\n}\nLimitRecord2:userid:condition2{\n    recordval2:value,\n    ...\n}\n\n```\n方案二：\n\n```\nRedis:\nuserid:{\n    LimitRecord1:recordval1\n    LimitRecord2.condition2:recordval1\n}\n```\n\n至于那种方式更好，见仁见智，在此我们提供不同思路给大家思考。\n对于缓存方案，多读少写第一种方案更合适。以Redis作为存储方案二相对更加节省内存使用，更适合k-v的存储数据结构。\n\n## Redis字段优化\n \n 在日常中，缓存往往只是少量数据，如配置项、热点数据等，而本项目中，Redis承载的数据规模日常热点在几千万键的级别中，因此每一个小的字符串优化，效果都很明显也很重要。\n优化前：\n\n```\nlimitkey.userid.cardtype等组合\n```\n优化后：\n\n```\nl.u.c 等组合\n甚至有些改为1.2.3纯数字代替\n```\n的确我们同事说的，这可读性降低很多，不过面对寸金尺土的内存空间，这优化还是很必要。\n\n另外，在Redis内存不同的数据结构对于内存的使用大小也是天差地别。\n\n|  存储结构  |  数据量（万）  |  数据格式  |内存大小|rdb文件大小|\n| --- | --- | --- |---|---|\n|  hash  |  15000  |  ziplist |10.77G|1.6G\n|  hash  |  15000  |  hashtable  |20.62G|6.9G\n\n当然我们也做了很多其他不同的字段优化和测试，在此边幅有限不一一详述。\n\n## 事务处理与lua脚本\n由于涉及多个限额的累计或回退、多个限额值（日累计、月累计）的一致性要求，数据库可提供事务机制实现，在Redis中，又是如何实现的。\nRedis提供了基础的事务功能，不过涉及到锁的机制，因此对于开发要求比较高。另一方面，Redis本身每次操作都是原子性的，所以也可通过lua脚本实现。我们本次项目采取的是后者。\n\nlua脚本并不复杂，但是lua脚本类似数据库的存储过程，一旦执行，若存在死循环或者大数据量操作，对于Redis来说是致命的。因此不建议常用，也不建议滥用，我们组员很多时间都觉得，lua可以做，就可以避免多次访问Redis，减少开销。不过遇到此类场景，并没有一致性要求的，建议使用hmset、hmget等批操作，或者pipeline等方式进行访问，避免使用lua此类脚本，减少风险和排查难度。\n\n## Redis与数据库同步\n在文章开头，提到一点很重要，也是项目必须面对的，就是Redis究竟是作为数据库还是缓存，这对于数据落地、高可用等设计都会涉及。\n目前定位是Redis缓存、DB作为数据落地，因此如何把Redis中的数据同步到数据库也是我们纠结很久的困难点。\n\n### 同步机制\n在Redis本身是支持类似队列或订阅机制，意味着我们可以考虑使用这两个方式触发数据同步。\n但由于Redis的队列机制是不完整的，不完整指的是Redis并不是提供一个类似MQ、rabbitMQ等专门的队列机制，因此不建议Redis的队列服务与本身Redis的存储服务一同使用，有可能会导致队列堵塞而导致存储服务无法使用。\n因此，项目使用了公司平台本身的队列服务，Redis仍然作为缓冲服务，避免由于高并发量和突发大数据量而导致系统不可用。\n\n### 数据结构映射\n如何把Redis的存储数据与数据库表结构对应，也是我们面对的问题之一。因此大多的方式是，Redis当缓存或临时的热点数据，允许在一段周期后进行丢弃，也就是说可不用回写数据库，但本项目中的数据，最长的时间是月，这个是无法丢弃的。并且如何对于这么大的数据量在Redis中进行清理，也是一个难题。\n\n\n### 解决方案\n另一方面，本项目采取的数据结构与数据库表结构也不一致，无法直接从Redis的数据中回写数据库。\n我们的处理方式就是不进行同步，Redis和数据库单独管理。每次通讯请求，通过开关判断，开关用于判断使用Redis或者DB。当默认使用Redis时，程序将请求同步发送至Redis限额控制服务，当Redis处理结果成功后，将请求异步发送至平台队列中，DB限额控制服务将从队列获取信息进行处理。\n\n\n　![](http://oxigzlivh.bkt.clouddn.com/2018-07-22-15322700497055.jpg)\n\n\n# 四、效果与总结\n<a id=\"summary\"></a>\n目前项目仍在开发中准备投产，效果如何仍需结合生产的运行情况，我们再进一步总结和归纳经验。本项目在Redis中的前期做了不少的实践，不过更多没落到实处，主要集中在性能和用法上的实践。但在项目开展时会遇到不少的难题需要解决，特别结合复杂的业务场景下，无法使用关系型数据库进行数据关联查询，无法使用事务机制控制提交回滚，更无法使用索引主键等控制约束，都是我们缺乏思考的地方。\n下一步我们需要完善的是运维和监控，在追求速度的开发节奏和生产性能的当下，如何能够让快速的系统健康稳定运行，相对应的故障发现和自动化运维机制是必不可少的。期待下一次的分享。\n\n","slug":"share-redis-summary20180722","published":1,"updated":"2018-09-05T18:06:07.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlpgr4hy00086ouanem2k0ws","content":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li><a href=\"#overview\">需求</a></li>\n<li><a href=\"#useage\">思考与方案</a></li>\n<li><a href=\"#stage\">实现与困难</a></li>\n<li><a href=\"#summary\">效果与总结</a></li>\n</ul>\n<h1 id=\"一、需求\"><a href=\"#一、需求\" class=\"headerlink\" title=\"一、需求\"></a>一、需求</h1><p><a id=\"overview\"></a></p>\n<ul>\n<li>需求比较简单，主要是实现多个维度的客户限额控制需求。每个限额的控制有多个的维度进行分别累计控制，还包括了单笔、日累计和月累计的方式。</li>\n<li>需要支持多个不同接入系统，而且需要考虑未来的业务扩展性。</li>\n<li>能够具有较强的实时性、响应性，而且能够稳定可持续运行。<a id=\"more\"></a> \n<h1 id=\"二、思考与方案\"><a href=\"#二、思考与方案\" class=\"headerlink\" title=\"二、思考与方案\"></a>二、思考与方案</h1><a id=\"useage\"></a><br>由于考虑这次项目是在支付系统中使用，常用场景是日常的高访问的支付场景以及一些秒杀、双十一等促销场景，而且涉及具有较大规模的基础用户量。自然而然，就想到了使用内存数据库进行处理。</li>\n</ul>\n<h2 id=\"缓存or数据库\"><a href=\"#缓存or数据库\" class=\"headerlink\" title=\"缓存or数据库\"></a>缓存or数据库</h2><p>内存数据库，顾名思义就是把数据放在内存中，直接把内存当作数据库使用。缓存，是内存数据库的应用场景之一，将进程使用的数据存在内存，达到共享、快速访问、减少数据交互的作用。但缓存毕竟不是数据库，缓存是可重新加载可丢失，而数据库却必须支持持久化、高可用、一致性的。<br>在项目初期，我们基本考虑把数据存放在内存中。但随着项目的推进，压力测试、验证等各方面的工作开展，我们发现直接使用内存作为数据库在不可丢失数据的场景下，是无法满足要求的。至少，为了保持整个内存数据库的高可用、持久化，也许我们需要更多其他的工作来达到。<br>因此，我们最终定型存储结构是Redis当作数据缓存以达到高并发的读写要求，DB2作为持久化数据库，最终数据需同步到DB2为准，也跟市场主流的用法类似。</p>\n<h2 id=\"选用Redis\"><a href=\"#选用Redis\" class=\"headerlink\" title=\"选用Redis\"></a>选用Redis</h2><p>缓存方案：Redis、ehcache、kafka等很多不同的方案。考虑行里已有Redis的实施经验，而且Redis提供的数据类型更为丰富，最重要是Redis支持持久化和成熟的高可用方案，初步定型为Redis。</p>\n<h1 id=\"三、实现与困难\"><a href=\"#三、实现与困难\" class=\"headerlink\" title=\"三、实现与困难\"></a>三、实现与困难</h1><p><a id=\"stage\"></a><br>万事起头难，从无到有的确需要经过很多不同的实践和验证。从开始以为Redis只是普通的get/set操作，常用的k-v结构存储之外，其实对于一个成熟可用的方案考虑的还不止这些。</p>\n<h2 id=\"数据存储\"><a href=\"#数据存储\" class=\"headerlink\" title=\"数据存储\"></a>数据存储</h2><ul>\n<li>数据规模</li>\n</ul>\n<p>存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。</p>\n<table>\n<thead>\n<tr>\n<th>额度A</th>\n<th>额度Ｂ</th>\n<th>额度C</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>基数x2</td>\n<td>基数x42</td>\n<td>基数x110</td>\n</tr>\n<tr>\n<td>1亿</td>\n<td>十多亿</td>\n<td>几百亿</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>数据结构</li>\n</ul>\n<p>在如何规模的数量下，对于数据库都需要采取各种方案来进行提高性能和访问速度，还有节省空间。更何况是存储量级只有硬盘十分之一不到的内存呢。<br>在项目初期，确定以Redis为数据存储，DB2为数据存储的方案，与大多的方案不太一样。大多的方案是Redis的数据结构与数据库的表结构一致，根据不同的key来定义或划分数据。</p>\n<p>数据库：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitRecord1(</span><br><span class=\"line\">userid,recordval1,...</span><br><span class=\"line\">)</span><br><span class=\"line\">LimitRecord2(</span><br><span class=\"line\">userid,condition2,recordva2,...</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>方案一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis：</span><br><span class=\"line\">LimitRecord1:userid&#123;</span><br><span class=\"line\">    recordval1:value,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">LimitRecord2:userid:condition2&#123;</span><br><span class=\"line\">    recordval2:value,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方案二：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis:</span><br><span class=\"line\">userid:&#123;</span><br><span class=\"line\">    LimitRecord1:recordval1</span><br><span class=\"line\">    LimitRecord2.condition2:recordval1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至于那种方式更好，见仁见智，在此我们提供不同思路给大家思考。<br>对于缓存方案，多读少写第一种方案更合适。以Redis作为存储方案二相对更加节省内存使用，更适合k-v的存储数据结构。</p>\n<h2 id=\"Redis字段优化\"><a href=\"#Redis字段优化\" class=\"headerlink\" title=\"Redis字段优化\"></a>Redis字段优化</h2><p> 在日常中，缓存往往只是少量数据，如配置项、热点数据等，而本项目中，Redis承载的数据规模日常热点在几千万键的级别中，因此每一个小的字符串优化，效果都很明显也很重要。<br>优化前：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limitkey.userid.cardtype等组合</span><br></pre></td></tr></table></figure>\n<p>优化后：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l.u.c 等组合</span><br><span class=\"line\">甚至有些改为1.2.3纯数字代替</span><br></pre></td></tr></table></figure>\n<p>的确我们同事说的，这可读性降低很多，不过面对寸金尺土的内存空间，这优化还是很必要。</p>\n<p>另外，在Redis内存不同的数据结构对于内存的使用大小也是天差地别。</p>\n<table>\n<thead>\n<tr>\n<th>存储结构</th>\n<th>数据量（万）</th>\n<th>数据格式</th>\n<th>内存大小</th>\n<th>rdb文件大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hash</td>\n<td>15000</td>\n<td>ziplist</td>\n<td>10.77G</td>\n<td>1.6G</td>\n</tr>\n<tr>\n<td>hash</td>\n<td>15000</td>\n<td>hashtable</td>\n<td>20.62G</td>\n<td>6.9G</td>\n</tr>\n</tbody>\n</table>\n<p>当然我们也做了很多其他不同的字段优化和测试，在此边幅有限不一一详述。</p>\n<h2 id=\"事务处理与lua脚本\"><a href=\"#事务处理与lua脚本\" class=\"headerlink\" title=\"事务处理与lua脚本\"></a>事务处理与lua脚本</h2><p>由于涉及多个限额的累计或回退、多个限额值（日累计、月累计）的一致性要求，数据库可提供事务机制实现，在Redis中，又是如何实现的。<br>Redis提供了基础的事务功能，不过涉及到锁的机制，因此对于开发要求比较高。另一方面，Redis本身每次操作都是原子性的，所以也可通过lua脚本实现。我们本次项目采取的是后者。</p>\n<p>lua脚本并不复杂，但是lua脚本类似数据库的存储过程，一旦执行，若存在死循环或者大数据量操作，对于Redis来说是致命的。因此不建议常用，也不建议滥用，我们组员很多时间都觉得，lua可以做，就可以避免多次访问Redis，减少开销。不过遇到此类场景，并没有一致性要求的，建议使用hmset、hmget等批操作，或者pipeline等方式进行访问，避免使用lua此类脚本，减少风险和排查难度。</p>\n<h2 id=\"Redis与数据库同步\"><a href=\"#Redis与数据库同步\" class=\"headerlink\" title=\"Redis与数据库同步\"></a>Redis与数据库同步</h2><p>在文章开头，提到一点很重要，也是项目必须面对的，就是Redis究竟是作为数据库还是缓存，这对于数据落地、高可用等设计都会涉及。<br>目前定位是Redis缓存、DB作为数据落地，因此如何把Redis中的数据同步到数据库也是我们纠结很久的困难点。</p>\n<h3 id=\"同步机制\"><a href=\"#同步机制\" class=\"headerlink\" title=\"同步机制\"></a>同步机制</h3><p>在Redis本身是支持类似队列或订阅机制，意味着我们可以考虑使用这两个方式触发数据同步。<br>但由于Redis的队列机制是不完整的，不完整指的是Redis并不是提供一个类似MQ、rabbitMQ等专门的队列机制，因此不建议Redis的队列服务与本身Redis的存储服务一同使用，有可能会导致队列堵塞而导致存储服务无法使用。<br>因此，项目使用了公司平台本身的队列服务，Redis仍然作为缓冲服务，避免由于高并发量和突发大数据量而导致系统不可用。</p>\n<h3 id=\"数据结构映射\"><a href=\"#数据结构映射\" class=\"headerlink\" title=\"数据结构映射\"></a>数据结构映射</h3><p>如何把Redis的存储数据与数据库表结构对应，也是我们面对的问题之一。因此大多的方式是，Redis当缓存或临时的热点数据，允许在一段周期后进行丢弃，也就是说可不用回写数据库，但本项目中的数据，最长的时间是月，这个是无法丢弃的。并且如何对于这么大的数据量在Redis中进行清理，也是一个难题。</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>另一方面，本项目采取的数据结构与数据库表结构也不一致，无法直接从Redis的数据中回写数据库。<br>我们的处理方式就是不进行同步，Redis和数据库单独管理。每次通讯请求，通过开关判断，开关用于判断使用Redis或者DB。当默认使用Redis时，程序将请求同步发送至Redis限额控制服务，当Redis处理结果成功后，将请求异步发送至平台队列中，DB限额控制服务将从队列获取信息进行处理。</p>\n<p>　<img src=\"http://oxigzlivh.bkt.clouddn.com/2018-07-22-15322700497055.jpg\" alt=\"\"></p>\n<h1 id=\"四、效果与总结\"><a href=\"#四、效果与总结\" class=\"headerlink\" title=\"四、效果与总结\"></a>四、效果与总结</h1><p><a id=\"summary\"></a><br>目前项目仍在开发中准备投产，效果如何仍需结合生产的运行情况，我们再进一步总结和归纳经验。本项目在Redis中的前期做了不少的实践，不过更多没落到实处，主要集中在性能和用法上的实践。但在项目开展时会遇到不少的难题需要解决，特别结合复杂的业务场景下，无法使用关系型数据库进行数据关联查询，无法使用事务机制控制提交回滚，更无法使用索引主键等控制约束，都是我们缺乏思考的地方。<br>下一步我们需要完善的是运维和监控，在追求速度的开发节奏和生产性能的当下，如何能够让快速的系统健康稳定运行，相对应的故障发现和自动化运维机制是必不可少的。期待下一次的分享。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li><a href=\"#overview\">需求</a></li>\n<li><a href=\"#useage\">思考与方案</a></li>\n<li><a href=\"#stage\">实现与困难</a></li>\n<li><a href=\"#summary\">效果与总结</a></li>\n</ul>\n<h1 id=\"一、需求\"><a href=\"#一、需求\" class=\"headerlink\" title=\"一、需求\"></a>一、需求</h1><p><a id=\"overview\"></a></p>\n<ul>\n<li>需求比较简单，主要是实现多个维度的客户限额控制需求。每个限额的控制有多个的维度进行分别累计控制，还包括了单笔、日累计和月累计的方式。</li>\n<li>需要支持多个不同接入系统，而且需要考虑未来的业务扩展性。</li>\n<li>能够具有较强的实时性、响应性，而且能够稳定可持续运行。","more":"<h1 id=\"二、思考与方案\"><a href=\"#二、思考与方案\" class=\"headerlink\" title=\"二、思考与方案\"></a>二、思考与方案</h1><a id=\"useage\"></a><br>由于考虑这次项目是在支付系统中使用，常用场景是日常的高访问的支付场景以及一些秒杀、双十一等促销场景，而且涉及具有较大规模的基础用户量。自然而然，就想到了使用内存数据库进行处理。</li>\n</ul>\n<h2 id=\"缓存or数据库\"><a href=\"#缓存or数据库\" class=\"headerlink\" title=\"缓存or数据库\"></a>缓存or数据库</h2><p>内存数据库，顾名思义就是把数据放在内存中，直接把内存当作数据库使用。缓存，是内存数据库的应用场景之一，将进程使用的数据存在内存，达到共享、快速访问、减少数据交互的作用。但缓存毕竟不是数据库，缓存是可重新加载可丢失，而数据库却必须支持持久化、高可用、一致性的。<br>在项目初期，我们基本考虑把数据存放在内存中。但随着项目的推进，压力测试、验证等各方面的工作开展，我们发现直接使用内存作为数据库在不可丢失数据的场景下，是无法满足要求的。至少，为了保持整个内存数据库的高可用、持久化，也许我们需要更多其他的工作来达到。<br>因此，我们最终定型存储结构是Redis当作数据缓存以达到高并发的读写要求，DB2作为持久化数据库，最终数据需同步到DB2为准，也跟市场主流的用法类似。</p>\n<h2 id=\"选用Redis\"><a href=\"#选用Redis\" class=\"headerlink\" title=\"选用Redis\"></a>选用Redis</h2><p>缓存方案：Redis、ehcache、kafka等很多不同的方案。考虑行里已有Redis的实施经验，而且Redis提供的数据类型更为丰富，最重要是Redis支持持久化和成熟的高可用方案，初步定型为Redis。</p>\n<h1 id=\"三、实现与困难\"><a href=\"#三、实现与困难\" class=\"headerlink\" title=\"三、实现与困难\"></a>三、实现与困难</h1><p><a id=\"stage\"></a><br>万事起头难，从无到有的确需要经过很多不同的实践和验证。从开始以为Redis只是普通的get/set操作，常用的k-v结构存储之外，其实对于一个成熟可用的方案考虑的还不止这些。</p>\n<h2 id=\"数据存储\"><a href=\"#数据存储\" class=\"headerlink\" title=\"数据存储\"></a>数据存储</h2><ul>\n<li>数据规模</li>\n</ul>\n<p>存量客户数约5000千万左右。我们通过表格看看在这个基数下的不同额度的数据量。</p>\n<table>\n<thead>\n<tr>\n<th>额度A</th>\n<th>额度Ｂ</th>\n<th>额度C</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>基数x2</td>\n<td>基数x42</td>\n<td>基数x110</td>\n</tr>\n<tr>\n<td>1亿</td>\n<td>十多亿</td>\n<td>几百亿</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>数据结构</li>\n</ul>\n<p>在如何规模的数量下，对于数据库都需要采取各种方案来进行提高性能和访问速度，还有节省空间。更何况是存储量级只有硬盘十分之一不到的内存呢。<br>在项目初期，确定以Redis为数据存储，DB2为数据存储的方案，与大多的方案不太一样。大多的方案是Redis的数据结构与数据库的表结构一致，根据不同的key来定义或划分数据。</p>\n<p>数据库：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LimitRecord1(</span><br><span class=\"line\">userid,recordval1,...</span><br><span class=\"line\">)</span><br><span class=\"line\">LimitRecord2(</span><br><span class=\"line\">userid,condition2,recordva2,...</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>方案一：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis：</span><br><span class=\"line\">LimitRecord1:userid&#123;</span><br><span class=\"line\">    recordval1:value,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">LimitRecord2:userid:condition2&#123;</span><br><span class=\"line\">    recordval2:value,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方案二：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis:</span><br><span class=\"line\">userid:&#123;</span><br><span class=\"line\">    LimitRecord1:recordval1</span><br><span class=\"line\">    LimitRecord2.condition2:recordval1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>至于那种方式更好，见仁见智，在此我们提供不同思路给大家思考。<br>对于缓存方案，多读少写第一种方案更合适。以Redis作为存储方案二相对更加节省内存使用，更适合k-v的存储数据结构。</p>\n<h2 id=\"Redis字段优化\"><a href=\"#Redis字段优化\" class=\"headerlink\" title=\"Redis字段优化\"></a>Redis字段优化</h2><p> 在日常中，缓存往往只是少量数据，如配置项、热点数据等，而本项目中，Redis承载的数据规模日常热点在几千万键的级别中，因此每一个小的字符串优化，效果都很明显也很重要。<br>优化前：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limitkey.userid.cardtype等组合</span><br></pre></td></tr></table></figure>\n<p>优化后：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l.u.c 等组合</span><br><span class=\"line\">甚至有些改为1.2.3纯数字代替</span><br></pre></td></tr></table></figure>\n<p>的确我们同事说的，这可读性降低很多，不过面对寸金尺土的内存空间，这优化还是很必要。</p>\n<p>另外，在Redis内存不同的数据结构对于内存的使用大小也是天差地别。</p>\n<table>\n<thead>\n<tr>\n<th>存储结构</th>\n<th>数据量（万）</th>\n<th>数据格式</th>\n<th>内存大小</th>\n<th>rdb文件大小</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hash</td>\n<td>15000</td>\n<td>ziplist</td>\n<td>10.77G</td>\n<td>1.6G</td>\n</tr>\n<tr>\n<td>hash</td>\n<td>15000</td>\n<td>hashtable</td>\n<td>20.62G</td>\n<td>6.9G</td>\n</tr>\n</tbody>\n</table>\n<p>当然我们也做了很多其他不同的字段优化和测试，在此边幅有限不一一详述。</p>\n<h2 id=\"事务处理与lua脚本\"><a href=\"#事务处理与lua脚本\" class=\"headerlink\" title=\"事务处理与lua脚本\"></a>事务处理与lua脚本</h2><p>由于涉及多个限额的累计或回退、多个限额值（日累计、月累计）的一致性要求，数据库可提供事务机制实现，在Redis中，又是如何实现的。<br>Redis提供了基础的事务功能，不过涉及到锁的机制，因此对于开发要求比较高。另一方面，Redis本身每次操作都是原子性的，所以也可通过lua脚本实现。我们本次项目采取的是后者。</p>\n<p>lua脚本并不复杂，但是lua脚本类似数据库的存储过程，一旦执行，若存在死循环或者大数据量操作，对于Redis来说是致命的。因此不建议常用，也不建议滥用，我们组员很多时间都觉得，lua可以做，就可以避免多次访问Redis，减少开销。不过遇到此类场景，并没有一致性要求的，建议使用hmset、hmget等批操作，或者pipeline等方式进行访问，避免使用lua此类脚本，减少风险和排查难度。</p>\n<h2 id=\"Redis与数据库同步\"><a href=\"#Redis与数据库同步\" class=\"headerlink\" title=\"Redis与数据库同步\"></a>Redis与数据库同步</h2><p>在文章开头，提到一点很重要，也是项目必须面对的，就是Redis究竟是作为数据库还是缓存，这对于数据落地、高可用等设计都会涉及。<br>目前定位是Redis缓存、DB作为数据落地，因此如何把Redis中的数据同步到数据库也是我们纠结很久的困难点。</p>\n<h3 id=\"同步机制\"><a href=\"#同步机制\" class=\"headerlink\" title=\"同步机制\"></a>同步机制</h3><p>在Redis本身是支持类似队列或订阅机制，意味着我们可以考虑使用这两个方式触发数据同步。<br>但由于Redis的队列机制是不完整的，不完整指的是Redis并不是提供一个类似MQ、rabbitMQ等专门的队列机制，因此不建议Redis的队列服务与本身Redis的存储服务一同使用，有可能会导致队列堵塞而导致存储服务无法使用。<br>因此，项目使用了公司平台本身的队列服务，Redis仍然作为缓冲服务，避免由于高并发量和突发大数据量而导致系统不可用。</p>\n<h3 id=\"数据结构映射\"><a href=\"#数据结构映射\" class=\"headerlink\" title=\"数据结构映射\"></a>数据结构映射</h3><p>如何把Redis的存储数据与数据库表结构对应，也是我们面对的问题之一。因此大多的方式是，Redis当缓存或临时的热点数据，允许在一段周期后进行丢弃，也就是说可不用回写数据库，但本项目中的数据，最长的时间是月，这个是无法丢弃的。并且如何对于这么大的数据量在Redis中进行清理，也是一个难题。</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>另一方面，本项目采取的数据结构与数据库表结构也不一致，无法直接从Redis的数据中回写数据库。<br>我们的处理方式就是不进行同步，Redis和数据库单独管理。每次通讯请求，通过开关判断，开关用于判断使用Redis或者DB。当默认使用Redis时，程序将请求同步发送至Redis限额控制服务，当Redis处理结果成功后，将请求异步发送至平台队列中，DB限额控制服务将从队列获取信息进行处理。</p>\n<p>　<img src=\"http://oxigzlivh.bkt.clouddn.com/2018-07-22-15322700497055.jpg\" alt=\"\"></p>\n<h1 id=\"四、效果与总结\"><a href=\"#四、效果与总结\" class=\"headerlink\" title=\"四、效果与总结\"></a>四、效果与总结</h1><p><a id=\"summary\"></a><br>目前项目仍在开发中准备投产，效果如何仍需结合生产的运行情况，我们再进一步总结和归纳经验。本项目在Redis中的前期做了不少的实践，不过更多没落到实处，主要集中在性能和用法上的实践。但在项目开展时会遇到不少的难题需要解决，特别结合复杂的业务场景下，无法使用关系型数据库进行数据关联查询，无法使用事务机制控制提交回滚，更无法使用索引主键等控制约束，都是我们缺乏思考的地方。<br>下一步我们需要完善的是运维和监控，在追求速度的开发节奏和生产性能的当下，如何能够让快速的系统健康稳定运行，相对应的故障发现和自动化运维机制是必不可少的。期待下一次的分享。</p>"},{"title":"【培训】公司Redis分享会","date":"2018-06-22T09:19:03.000Z","copyright":true,"_content":"\n# 大纲\n* [Redis介绍](#overview)\n* [Redis使用](#useage)\n* [Redis场景](#stage)\n* [Redis实践](#practice)\n<!-- more --> \n# 一、Redis介绍\n<a id=\"overview\"></a>\n## 概述\nRemote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。\n\nRedis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。\n\n它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。\n## 特性\n* Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n\n* Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n\n* Redis支持数据的备份，即master-slave模式的数据备份。\n\n## 数据结构\n### Redis支持五种数据类型：\n```\n//type的占5种类型：\n/* Object types */\n#define OBJ_STRING 0    //字符串对象\n#define OBJ_LIST 1      //列表对象\n#define OBJ_SET 2       //集合对象\n#define OBJ_ZSET 3      //有序集合对象\n#define OBJ_HASH 4      //哈希对象\n```\n\n### Redis底层的十种基础数据结构（3.2）\n```\n// encoding 的10种类型\n#define OBJ_ENCODING_RAW 0          //原始表示方式，字符串对象是简单动态字符串\n#define OBJ_ENCODING_INT 1          //long类型的整数\n#define OBJ_ENCODING_HT 2           //字典\n#define OBJ_ENCODING_ZIPMAP 3       //不在使用\n#define OBJ_ENCODING_LINKEDLIST 4   //双端链表,不在使用\n#define OBJ_ENCODING_ZIPLIST 5      //压缩列表\n#define OBJ_ENCODING_INTSET 6       //整数集合\n#define OBJ_ENCODING_SKIPLIST 7     //跳跃表和字典\n#define OBJ_ENCODING_EMBSTR 8       //embstr编码的简单动态字符串\n#define OBJ_ENCODING_QUICKLIST 9    //由压缩列表组成的双向列表-->快速列表\n```\n\n### 相互关系\n|  数据类型  |             基础数据结构 |\n|----------|-------------------------|\n|String    |INT,EMBSTR,RAW           |\n|LIST      |ZIPLIST,QUICKLIST        |\n|HASH      |ZIPLIST,HT(HASHTABLE)    |\n|SET       |INTSET,HT                |\n|ZSET      |ZIPLIST,SKIPLIST         |\n\n## 优势\n* 性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。\n\n* 丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。\n\n* 原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。\n\n* 丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。\n\n# 二、Redis使用\n<a id=\"useage\"></a>\n## 安装方式\n请参考另一篇文章{% post_link course-redisInstall [Redis 3.2 详细安装步骤说明]%}\n## 常用命令\n[常用命令介绍](https://www.cnblogs.com/kevinws/p/6281395.html)\n## 持久化介绍\nRedis 分别提供了 RDB 和 AOF 两种持久化机制： \n\n* RDB \n将数据库的快照（snapshot）以二进制的方式保存到磁盘中。\n* AOF \n则以协议文本的方式，将所有对数据库进行过写入的命令（及其参数）记录到 AOF 文件，以此达到记录数据库状态的目的。\n\n## 高可用\n### 主从同步\n\n### 哨兵模式\nSentinel（哨兵）是Redis 的高可用性解决方案：由一个或多个Sentinel 实例 组成的Sentinel 系统可以监视任意多个主服务器，以及这些主服务器属下的所有从服务器，并在被监视的主服务器进入下线状态时，自动将下线主服务器属下的某个从服务器升级为新的主服务器。\n参考部署架构图\n\n* 正常状态下：（A-主，B、C为从）\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206515518.jpg)\n\n* Master掉线后：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206846504.jpg)\n\n* 选举升级Slave为Master：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207006886.jpg)\n\n* 恢复正常后：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207149684.jpg)\n\n\n# 三、Redis场景\n<a id=\"stage\"></a>\n## 表数据缓存\n使用方式：直接把表数据加载至Redis中，数据类型为Hash，常用的数据库缓存的用法之一。\n\n* 一般用法：\n\n```\n如：\n **表名：**TableName\n **字段：**A,B,C,D\n 转换为Redis的存为：(结构为hash)\n **Key：**T_TableName_唯一索引\n **Field：**\n {a:val1,b:val2,c:val3,d:val4}\n```\n \n* 说明：\n此类一般保持少量并且常用的字段加载到内存中进行缓存使用，因此需要保证Field的数据量条数不多并且val字段长度不大，尽量使用Ziplist以便节省内存空间。\n## NoSQL数据库\n使用方式：直接以Redis作为数据库存储，可以同表数据缓存方式进行存放，或重新定义所需的数据结构。\n\n* 一般用法：\n\n```\n如：对象User\n\nKey为：User:uid\nField：对应属性字段\n或\nKey为：User\nField:uid.属性字段\n```\n\n* 说明：\n需要进行数据量的评估和考虑数据结构对于内存的使用。\n因为在Redis中，若所有数据均以Key-Vale的方式存放，每个key除了自身数据外，还需保留RedisObeject本身的数据空间，因此占用较大，可考虑转为Hash-Field的方式进行数据存放。\n但Hash使用两种数据结构，一个是ZipList一个是HashTable，若使用HashTable方式存放，则内存空间无法节省，因此需结合具体情况定义不同的数据结构使用方式。\n\n## 消息队列（生产者消费模式）\nRedis不仅可作为缓存服务器，还可用作消息队列。它的列表类型天生支持用作消息队列。\nRedis提供了两种方式来作消息队列。 \n一个是使用生产者消费模式，另一个就是发布订阅者模式。 \n前者会让一个或者多个客户端监听消息队列，一旦消息到达，消费者马上消费，谁先抢到算谁的，如果队列里没有消息，则消费者继续监听。 \n后者也是一个或多个客户端订阅消息频道，只要发布者发布消息，所有订阅者都能收到消息，订阅者都是平等的。\n如下图所示：\n\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297224494777.jpg)\n\n由于Redis的列表是使用双向链表实现的，保存了头尾节点，所以在列表头尾两边插取元素都是非常快的。所以可以直接使用Redis的List实现消息队列，只需简单的两个指令lpush和rpop或者rpush和lpop。\n\n## 流水号判重\nRedis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。\nRedis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。\n集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。\n我们可以使用Set进行**流水号判重操作**\n\n```\n如：\nKey:serno_YYYYMMDD\nSet:[serno1,serno2 ... sernoN]\n\nCommand：\nSADD serno_YYYYMMDD sernoX \n加入Set中，若已存在则返回0，若加入成功则返回1\n```\n\n# 四、Redis实践\n<a id=\"practice\"></a>\n## 支付系统-额度服务\n请参考另一篇文章{% post_link practice-redis-s00 [【实践】记Redis使用实践 ]%}\n## Redis数据迁移\n方案进行中，后续分享。\n\n \n\n","source":"_posts/work-redisMeeting.md","raw":"---\ntitle:  【培训】公司Redis分享会\ndate: 2018-06-22 17:19:03\ntags: \n    - 培训 \n    - redis \n    - 技术\n    - 会议\ncategories:\n    - 工作\n    - 培训\ncopyright: true\n---\n\n# 大纲\n* [Redis介绍](#overview)\n* [Redis使用](#useage)\n* [Redis场景](#stage)\n* [Redis实践](#practice)\n<!-- more --> \n# 一、Redis介绍\n<a id=\"overview\"></a>\n## 概述\nRemote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。\n\nRedis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。\n\n它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。\n## 特性\n* Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。\n\n* Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。\n\n* Redis支持数据的备份，即master-slave模式的数据备份。\n\n## 数据结构\n### Redis支持五种数据类型：\n```\n//type的占5种类型：\n/* Object types */\n#define OBJ_STRING 0    //字符串对象\n#define OBJ_LIST 1      //列表对象\n#define OBJ_SET 2       //集合对象\n#define OBJ_ZSET 3      //有序集合对象\n#define OBJ_HASH 4      //哈希对象\n```\n\n### Redis底层的十种基础数据结构（3.2）\n```\n// encoding 的10种类型\n#define OBJ_ENCODING_RAW 0          //原始表示方式，字符串对象是简单动态字符串\n#define OBJ_ENCODING_INT 1          //long类型的整数\n#define OBJ_ENCODING_HT 2           //字典\n#define OBJ_ENCODING_ZIPMAP 3       //不在使用\n#define OBJ_ENCODING_LINKEDLIST 4   //双端链表,不在使用\n#define OBJ_ENCODING_ZIPLIST 5      //压缩列表\n#define OBJ_ENCODING_INTSET 6       //整数集合\n#define OBJ_ENCODING_SKIPLIST 7     //跳跃表和字典\n#define OBJ_ENCODING_EMBSTR 8       //embstr编码的简单动态字符串\n#define OBJ_ENCODING_QUICKLIST 9    //由压缩列表组成的双向列表-->快速列表\n```\n\n### 相互关系\n|  数据类型  |             基础数据结构 |\n|----------|-------------------------|\n|String    |INT,EMBSTR,RAW           |\n|LIST      |ZIPLIST,QUICKLIST        |\n|HASH      |ZIPLIST,HT(HASHTABLE)    |\n|SET       |INTSET,HT                |\n|ZSET      |ZIPLIST,SKIPLIST         |\n\n## 优势\n* 性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。\n\n* 丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。\n\n* 原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。\n\n* 丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。\n\n# 二、Redis使用\n<a id=\"useage\"></a>\n## 安装方式\n请参考另一篇文章{% post_link course-redisInstall [Redis 3.2 详细安装步骤说明]%}\n## 常用命令\n[常用命令介绍](https://www.cnblogs.com/kevinws/p/6281395.html)\n## 持久化介绍\nRedis 分别提供了 RDB 和 AOF 两种持久化机制： \n\n* RDB \n将数据库的快照（snapshot）以二进制的方式保存到磁盘中。\n* AOF \n则以协议文本的方式，将所有对数据库进行过写入的命令（及其参数）记录到 AOF 文件，以此达到记录数据库状态的目的。\n\n## 高可用\n### 主从同步\n\n### 哨兵模式\nSentinel（哨兵）是Redis 的高可用性解决方案：由一个或多个Sentinel 实例 组成的Sentinel 系统可以监视任意多个主服务器，以及这些主服务器属下的所有从服务器，并在被监视的主服务器进入下线状态时，自动将下线主服务器属下的某个从服务器升级为新的主服务器。\n参考部署架构图\n\n* 正常状态下：（A-主，B、C为从）\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206515518.jpg)\n\n* Master掉线后：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206846504.jpg)\n\n* 选举升级Slave为Master：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207006886.jpg)\n\n* 恢复正常后：\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207149684.jpg)\n\n\n# 三、Redis场景\n<a id=\"stage\"></a>\n## 表数据缓存\n使用方式：直接把表数据加载至Redis中，数据类型为Hash，常用的数据库缓存的用法之一。\n\n* 一般用法：\n\n```\n如：\n **表名：**TableName\n **字段：**A,B,C,D\n 转换为Redis的存为：(结构为hash)\n **Key：**T_TableName_唯一索引\n **Field：**\n {a:val1,b:val2,c:val3,d:val4}\n```\n \n* 说明：\n此类一般保持少量并且常用的字段加载到内存中进行缓存使用，因此需要保证Field的数据量条数不多并且val字段长度不大，尽量使用Ziplist以便节省内存空间。\n## NoSQL数据库\n使用方式：直接以Redis作为数据库存储，可以同表数据缓存方式进行存放，或重新定义所需的数据结构。\n\n* 一般用法：\n\n```\n如：对象User\n\nKey为：User:uid\nField：对应属性字段\n或\nKey为：User\nField:uid.属性字段\n```\n\n* 说明：\n需要进行数据量的评估和考虑数据结构对于内存的使用。\n因为在Redis中，若所有数据均以Key-Vale的方式存放，每个key除了自身数据外，还需保留RedisObeject本身的数据空间，因此占用较大，可考虑转为Hash-Field的方式进行数据存放。\n但Hash使用两种数据结构，一个是ZipList一个是HashTable，若使用HashTable方式存放，则内存空间无法节省，因此需结合具体情况定义不同的数据结构使用方式。\n\n## 消息队列（生产者消费模式）\nRedis不仅可作为缓存服务器，还可用作消息队列。它的列表类型天生支持用作消息队列。\nRedis提供了两种方式来作消息队列。 \n一个是使用生产者消费模式，另一个就是发布订阅者模式。 \n前者会让一个或者多个客户端监听消息队列，一旦消息到达，消费者马上消费，谁先抢到算谁的，如果队列里没有消息，则消费者继续监听。 \n后者也是一个或多个客户端订阅消息频道，只要发布者发布消息，所有订阅者都能收到消息，订阅者都是平等的。\n如下图所示：\n\n![](http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297224494777.jpg)\n\n由于Redis的列表是使用双向链表实现的，保存了头尾节点，所以在列表头尾两边插取元素都是非常快的。所以可以直接使用Redis的List实现消息队列，只需简单的两个指令lpush和rpop或者rpush和lpop。\n\n## 流水号判重\nRedis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。\nRedis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。\n集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。\n我们可以使用Set进行**流水号判重操作**\n\n```\n如：\nKey:serno_YYYYMMDD\nSet:[serno1,serno2 ... sernoN]\n\nCommand：\nSADD serno_YYYYMMDD sernoX \n加入Set中，若已存在则返回0，若加入成功则返回1\n```\n\n# 四、Redis实践\n<a id=\"practice\"></a>\n## 支付系统-额度服务\n请参考另一篇文章{% post_link practice-redis-s00 [【实践】记Redis使用实践 ]%}\n## Redis数据迁移\n方案进行中，后续分享。\n\n \n\n","slug":"work-redisMeeting","published":1,"updated":"2018-09-05T18:06:20.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlpgr4hz00096oua75yfz4sb","content":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li><a href=\"#overview\">Redis介绍</a></li>\n<li><a href=\"#useage\">Redis使用</a></li>\n<li><a href=\"#stage\">Redis场景</a></li>\n<li><a href=\"#practice\">Redis实践</a><a id=\"more\"></a> \n<h1 id=\"一、Redis介绍\"><a href=\"#一、Redis介绍\" class=\"headerlink\" title=\"一、Redis介绍\"></a>一、Redis介绍</h1><a id=\"overview\"></a><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2>Remote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。</li>\n</ul>\n<p>Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>\n<p>它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</p>\n</li>\n<li><p>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p>\n</li>\n<li><p>Redis支持数据的备份，即master-slave模式的数据备份。</p>\n</li>\n</ul>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><h3 id=\"Redis支持五种数据类型：\"><a href=\"#Redis支持五种数据类型：\" class=\"headerlink\" title=\"Redis支持五种数据类型：\"></a>Redis支持五种数据类型：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//type的占5种类型：</span><br><span class=\"line\">/* Object types */</span><br><span class=\"line\">#define OBJ_STRING 0    //字符串对象</span><br><span class=\"line\">#define OBJ_LIST 1      //列表对象</span><br><span class=\"line\">#define OBJ_SET 2       //集合对象</span><br><span class=\"line\">#define OBJ_ZSET 3      //有序集合对象</span><br><span class=\"line\">#define OBJ_HASH 4      //哈希对象</span><br></pre></td></tr></table></figure>\n<h3 id=\"Redis底层的十种基础数据结构（3-2）\"><a href=\"#Redis底层的十种基础数据结构（3-2）\" class=\"headerlink\" title=\"Redis底层的十种基础数据结构（3.2）\"></a>Redis底层的十种基础数据结构（3.2）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// encoding 的10种类型</span><br><span class=\"line\">#define OBJ_ENCODING_RAW 0          //原始表示方式，字符串对象是简单动态字符串</span><br><span class=\"line\">#define OBJ_ENCODING_INT 1          //long类型的整数</span><br><span class=\"line\">#define OBJ_ENCODING_HT 2           //字典</span><br><span class=\"line\">#define OBJ_ENCODING_ZIPMAP 3       //不在使用</span><br><span class=\"line\">#define OBJ_ENCODING_LINKEDLIST 4   //双端链表,不在使用</span><br><span class=\"line\">#define OBJ_ENCODING_ZIPLIST 5      //压缩列表</span><br><span class=\"line\">#define OBJ_ENCODING_INTSET 6       //整数集合</span><br><span class=\"line\">#define OBJ_ENCODING_SKIPLIST 7     //跳跃表和字典</span><br><span class=\"line\">#define OBJ_ENCODING_EMBSTR 8       //embstr编码的简单动态字符串</span><br><span class=\"line\">#define OBJ_ENCODING_QUICKLIST 9    //由压缩列表组成的双向列表--&gt;快速列表</span><br></pre></td></tr></table></figure>\n<h3 id=\"相互关系\"><a href=\"#相互关系\" class=\"headerlink\" title=\"相互关系\"></a>相互关系</h3><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>基础数据结构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>INT,EMBSTR,RAW</td>\n</tr>\n<tr>\n<td>LIST</td>\n<td>ZIPLIST,QUICKLIST</td>\n</tr>\n<tr>\n<td>HASH</td>\n<td>ZIPLIST,HT(HASHTABLE)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>INTSET,HT</td>\n</tr>\n<tr>\n<td>ZSET</td>\n<td>ZIPLIST,SKIPLIST</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</p>\n</li>\n<li><p>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</p>\n</li>\n<li><p>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</p>\n</li>\n<li><p>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p>\n</li>\n</ul>\n<h1 id=\"二、Redis使用\"><a href=\"#二、Redis使用\" class=\"headerlink\" title=\"二、Redis使用\"></a>二、Redis使用</h1><p><a id=\"useage\"></a></p>\n<h2 id=\"安装方式\"><a href=\"#安装方式\" class=\"headerlink\" title=\"安装方式\"></a>安装方式</h2><p>请参考另一篇文章<a href=\"/2018/06/18/course-redisInstall/\" title=\"[Redis 3.2 详细安装步骤说明]\">[Redis 3.2 详细安装步骤说明]</a></p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p><a href=\"https://www.cnblogs.com/kevinws/p/6281395.html\" target=\"_blank\" rel=\"noopener\">常用命令介绍</a></p>\n<h2 id=\"持久化介绍\"><a href=\"#持久化介绍\" class=\"headerlink\" title=\"持久化介绍\"></a>持久化介绍</h2><p>Redis 分别提供了 RDB 和 AOF 两种持久化机制： </p>\n<ul>\n<li>RDB<br>将数据库的快照（snapshot）以二进制的方式保存到磁盘中。</li>\n<li>AOF<br>则以协议文本的方式，将所有对数据库进行过写入的命令（及其参数）记录到 AOF 文件，以此达到记录数据库状态的目的。</li>\n</ul>\n<h2 id=\"高可用\"><a href=\"#高可用\" class=\"headerlink\" title=\"高可用\"></a>高可用</h2><h3 id=\"主从同步\"><a href=\"#主从同步\" class=\"headerlink\" title=\"主从同步\"></a>主从同步</h3><h3 id=\"哨兵模式\"><a href=\"#哨兵模式\" class=\"headerlink\" title=\"哨兵模式\"></a>哨兵模式</h3><p>Sentinel（哨兵）是Redis 的高可用性解决方案：由一个或多个Sentinel 实例 组成的Sentinel 系统可以监视任意多个主服务器，以及这些主服务器属下的所有从服务器，并在被监视的主服务器进入下线状态时，自动将下线主服务器属下的某个从服务器升级为新的主服务器。<br>参考部署架构图</p>\n<ul>\n<li><p>正常状态下：（A-主，B、C为从）<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206515518.jpg\" alt=\"\"></p>\n</li>\n<li><p>Master掉线后：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206846504.jpg\" alt=\"\"></p>\n</li>\n<li><p>选举升级Slave为Master：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207006886.jpg\" alt=\"\"></p>\n</li>\n<li><p>恢复正常后：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207149684.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h1 id=\"三、Redis场景\"><a href=\"#三、Redis场景\" class=\"headerlink\" title=\"三、Redis场景\"></a>三、Redis场景</h1><p><a id=\"stage\"></a></p>\n<h2 id=\"表数据缓存\"><a href=\"#表数据缓存\" class=\"headerlink\" title=\"表数据缓存\"></a>表数据缓存</h2><p>使用方式：直接把表数据加载至Redis中，数据类型为Hash，常用的数据库缓存的用法之一。</p>\n<ul>\n<li>一般用法：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\"> **表名：**TableName</span><br><span class=\"line\"> **字段：**A,B,C,D</span><br><span class=\"line\"> 转换为Redis的存为：(结构为hash)</span><br><span class=\"line\"> **Key：**T_TableName_唯一索引</span><br><span class=\"line\"> **Field：**</span><br><span class=\"line\"> &#123;a:val1,b:val2,c:val3,d:val4&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>说明：<br>此类一般保持少量并且常用的字段加载到内存中进行缓存使用，因此需要保证Field的数据量条数不多并且val字段长度不大，尽量使用Ziplist以便节省内存空间。</p>\n<h2 id=\"NoSQL数据库\"><a href=\"#NoSQL数据库\" class=\"headerlink\" title=\"NoSQL数据库\"></a>NoSQL数据库</h2><p>使用方式：直接以Redis作为数据库存储，可以同表数据缓存方式进行存放，或重新定义所需的数据结构。</p>\n</li>\n<li><p>一般用法：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：对象User</span><br><span class=\"line\"></span><br><span class=\"line\">Key为：User:uid</span><br><span class=\"line\">Field：对应属性字段</span><br><span class=\"line\">或</span><br><span class=\"line\">Key为：User</span><br><span class=\"line\">Field:uid.属性字段</span><br></pre></td></tr></table></figure>\n<ul>\n<li>说明：<br>需要进行数据量的评估和考虑数据结构对于内存的使用。<br>因为在Redis中，若所有数据均以Key-Vale的方式存放，每个key除了自身数据外，还需保留RedisObeject本身的数据空间，因此占用较大，可考虑转为Hash-Field的方式进行数据存放。<br>但Hash使用两种数据结构，一个是ZipList一个是HashTable，若使用HashTable方式存放，则内存空间无法节省，因此需结合具体情况定义不同的数据结构使用方式。</li>\n</ul>\n<h2 id=\"消息队列（生产者消费模式）\"><a href=\"#消息队列（生产者消费模式）\" class=\"headerlink\" title=\"消息队列（生产者消费模式）\"></a>消息队列（生产者消费模式）</h2><p>Redis不仅可作为缓存服务器，还可用作消息队列。它的列表类型天生支持用作消息队列。<br>Redis提供了两种方式来作消息队列。<br>一个是使用生产者消费模式，另一个就是发布订阅者模式。<br>前者会让一个或者多个客户端监听消息队列，一旦消息到达，消费者马上消费，谁先抢到算谁的，如果队列里没有消息，则消费者继续监听。<br>后者也是一个或多个客户端订阅消息频道，只要发布者发布消息，所有订阅者都能收到消息，订阅者都是平等的。<br>如下图所示：</p>\n<p><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297224494777.jpg\" alt=\"\"></p>\n<p>由于Redis的列表是使用双向链表实现的，保存了头尾节点，所以在列表头尾两边插取元素都是非常快的。所以可以直接使用Redis的List实现消息队列，只需简单的两个指令lpush和rpop或者rpush和lpop。</p>\n<h2 id=\"流水号判重\"><a href=\"#流水号判重\" class=\"headerlink\" title=\"流水号判重\"></a>流水号判重</h2><p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。<br>Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。<br>集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。<br>我们可以使用Set进行<strong>流水号判重操作</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\">Key:serno_YYYYMMDD</span><br><span class=\"line\">Set:[serno1,serno2 ... sernoN]</span><br><span class=\"line\"></span><br><span class=\"line\">Command：</span><br><span class=\"line\">SADD serno_YYYYMMDD sernoX </span><br><span class=\"line\">加入Set中，若已存在则返回0，若加入成功则返回1</span><br></pre></td></tr></table></figure>\n<h1 id=\"四、Redis实践\"><a href=\"#四、Redis实践\" class=\"headerlink\" title=\"四、Redis实践\"></a>四、Redis实践</h1><p><a id=\"practice\"></a></p>\n<h2 id=\"支付系统-额度服务\"><a href=\"#支付系统-额度服务\" class=\"headerlink\" title=\"支付系统-额度服务\"></a>支付系统-额度服务</h2><p>请参考另一篇文章</p>\n<h2 id=\"Redis数据迁移\"><a href=\"#Redis数据迁移\" class=\"headerlink\" title=\"Redis数据迁移\"></a>Redis数据迁移</h2><p>方案进行中，后续分享。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"大纲\"><a href=\"#大纲\" class=\"headerlink\" title=\"大纲\"></a>大纲</h1><ul>\n<li><a href=\"#overview\">Redis介绍</a></li>\n<li><a href=\"#useage\">Redis使用</a></li>\n<li><a href=\"#stage\">Redis场景</a></li>\n<li><a href=\"#practice\">Redis实践</a>","more":"<h1 id=\"一、Redis介绍\"><a href=\"#一、Redis介绍\" class=\"headerlink\" title=\"一、Redis介绍\"></a>一、Redis介绍</h1><a id=\"overview\"></a><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2>Remote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。</li>\n</ul>\n<p>Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>\n<p>它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><ul>\n<li><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</p>\n</li>\n<li><p>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p>\n</li>\n<li><p>Redis支持数据的备份，即master-slave模式的数据备份。</p>\n</li>\n</ul>\n<h2 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h2><h3 id=\"Redis支持五种数据类型：\"><a href=\"#Redis支持五种数据类型：\" class=\"headerlink\" title=\"Redis支持五种数据类型：\"></a>Redis支持五种数据类型：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//type的占5种类型：</span><br><span class=\"line\">/* Object types */</span><br><span class=\"line\">#define OBJ_STRING 0    //字符串对象</span><br><span class=\"line\">#define OBJ_LIST 1      //列表对象</span><br><span class=\"line\">#define OBJ_SET 2       //集合对象</span><br><span class=\"line\">#define OBJ_ZSET 3      //有序集合对象</span><br><span class=\"line\">#define OBJ_HASH 4      //哈希对象</span><br></pre></td></tr></table></figure>\n<h3 id=\"Redis底层的十种基础数据结构（3-2）\"><a href=\"#Redis底层的十种基础数据结构（3-2）\" class=\"headerlink\" title=\"Redis底层的十种基础数据结构（3.2）\"></a>Redis底层的十种基础数据结构（3.2）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// encoding 的10种类型</span><br><span class=\"line\">#define OBJ_ENCODING_RAW 0          //原始表示方式，字符串对象是简单动态字符串</span><br><span class=\"line\">#define OBJ_ENCODING_INT 1          //long类型的整数</span><br><span class=\"line\">#define OBJ_ENCODING_HT 2           //字典</span><br><span class=\"line\">#define OBJ_ENCODING_ZIPMAP 3       //不在使用</span><br><span class=\"line\">#define OBJ_ENCODING_LINKEDLIST 4   //双端链表,不在使用</span><br><span class=\"line\">#define OBJ_ENCODING_ZIPLIST 5      //压缩列表</span><br><span class=\"line\">#define OBJ_ENCODING_INTSET 6       //整数集合</span><br><span class=\"line\">#define OBJ_ENCODING_SKIPLIST 7     //跳跃表和字典</span><br><span class=\"line\">#define OBJ_ENCODING_EMBSTR 8       //embstr编码的简单动态字符串</span><br><span class=\"line\">#define OBJ_ENCODING_QUICKLIST 9    //由压缩列表组成的双向列表--&gt;快速列表</span><br></pre></td></tr></table></figure>\n<h3 id=\"相互关系\"><a href=\"#相互关系\" class=\"headerlink\" title=\"相互关系\"></a>相互关系</h3><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>基础数据结构</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>String</td>\n<td>INT,EMBSTR,RAW</td>\n</tr>\n<tr>\n<td>LIST</td>\n<td>ZIPLIST,QUICKLIST</td>\n</tr>\n<tr>\n<td>HASH</td>\n<td>ZIPLIST,HT(HASHTABLE)</td>\n</tr>\n<tr>\n<td>SET</td>\n<td>INTSET,HT</td>\n</tr>\n<tr>\n<td>ZSET</td>\n<td>ZIPLIST,SKIPLIST</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"优势\"><a href=\"#优势\" class=\"headerlink\" title=\"优势\"></a>优势</h2><ul>\n<li><p>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</p>\n</li>\n<li><p>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</p>\n</li>\n<li><p>原子 – Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。</p>\n</li>\n<li><p>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p>\n</li>\n</ul>\n<h1 id=\"二、Redis使用\"><a href=\"#二、Redis使用\" class=\"headerlink\" title=\"二、Redis使用\"></a>二、Redis使用</h1><p><a id=\"useage\"></a></p>\n<h2 id=\"安装方式\"><a href=\"#安装方式\" class=\"headerlink\" title=\"安装方式\"></a>安装方式</h2><p>请参考另一篇文章<a href=\"/2018/06/18/course-redisInstall/\" title=\"[Redis 3.2 详细安装步骤说明]\">[Redis 3.2 详细安装步骤说明]</a></p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p><a href=\"https://www.cnblogs.com/kevinws/p/6281395.html\" target=\"_blank\" rel=\"noopener\">常用命令介绍</a></p>\n<h2 id=\"持久化介绍\"><a href=\"#持久化介绍\" class=\"headerlink\" title=\"持久化介绍\"></a>持久化介绍</h2><p>Redis 分别提供了 RDB 和 AOF 两种持久化机制： </p>\n<ul>\n<li>RDB<br>将数据库的快照（snapshot）以二进制的方式保存到磁盘中。</li>\n<li>AOF<br>则以协议文本的方式，将所有对数据库进行过写入的命令（及其参数）记录到 AOF 文件，以此达到记录数据库状态的目的。</li>\n</ul>\n<h2 id=\"高可用\"><a href=\"#高可用\" class=\"headerlink\" title=\"高可用\"></a>高可用</h2><h3 id=\"主从同步\"><a href=\"#主从同步\" class=\"headerlink\" title=\"主从同步\"></a>主从同步</h3><h3 id=\"哨兵模式\"><a href=\"#哨兵模式\" class=\"headerlink\" title=\"哨兵模式\"></a>哨兵模式</h3><p>Sentinel（哨兵）是Redis 的高可用性解决方案：由一个或多个Sentinel 实例 组成的Sentinel 系统可以监视任意多个主服务器，以及这些主服务器属下的所有从服务器，并在被监视的主服务器进入下线状态时，自动将下线主服务器属下的某个从服务器升级为新的主服务器。<br>参考部署架构图</p>\n<ul>\n<li><p>正常状态下：（A-主，B、C为从）<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206515518.jpg\" alt=\"\"></p>\n</li>\n<li><p>Master掉线后：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297206846504.jpg\" alt=\"\"></p>\n</li>\n<li><p>选举升级Slave为Master：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207006886.jpg\" alt=\"\"></p>\n</li>\n<li><p>恢复正常后：<br><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297207149684.jpg\" alt=\"\"></p>\n</li>\n</ul>\n<h1 id=\"三、Redis场景\"><a href=\"#三、Redis场景\" class=\"headerlink\" title=\"三、Redis场景\"></a>三、Redis场景</h1><p><a id=\"stage\"></a></p>\n<h2 id=\"表数据缓存\"><a href=\"#表数据缓存\" class=\"headerlink\" title=\"表数据缓存\"></a>表数据缓存</h2><p>使用方式：直接把表数据加载至Redis中，数据类型为Hash，常用的数据库缓存的用法之一。</p>\n<ul>\n<li>一般用法：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\"> **表名：**TableName</span><br><span class=\"line\"> **字段：**A,B,C,D</span><br><span class=\"line\"> 转换为Redis的存为：(结构为hash)</span><br><span class=\"line\"> **Key：**T_TableName_唯一索引</span><br><span class=\"line\"> **Field：**</span><br><span class=\"line\"> &#123;a:val1,b:val2,c:val3,d:val4&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>说明：<br>此类一般保持少量并且常用的字段加载到内存中进行缓存使用，因此需要保证Field的数据量条数不多并且val字段长度不大，尽量使用Ziplist以便节省内存空间。</p>\n<h2 id=\"NoSQL数据库\"><a href=\"#NoSQL数据库\" class=\"headerlink\" title=\"NoSQL数据库\"></a>NoSQL数据库</h2><p>使用方式：直接以Redis作为数据库存储，可以同表数据缓存方式进行存放，或重新定义所需的数据结构。</p>\n</li>\n<li><p>一般用法：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：对象User</span><br><span class=\"line\"></span><br><span class=\"line\">Key为：User:uid</span><br><span class=\"line\">Field：对应属性字段</span><br><span class=\"line\">或</span><br><span class=\"line\">Key为：User</span><br><span class=\"line\">Field:uid.属性字段</span><br></pre></td></tr></table></figure>\n<ul>\n<li>说明：<br>需要进行数据量的评估和考虑数据结构对于内存的使用。<br>因为在Redis中，若所有数据均以Key-Vale的方式存放，每个key除了自身数据外，还需保留RedisObeject本身的数据空间，因此占用较大，可考虑转为Hash-Field的方式进行数据存放。<br>但Hash使用两种数据结构，一个是ZipList一个是HashTable，若使用HashTable方式存放，则内存空间无法节省，因此需结合具体情况定义不同的数据结构使用方式。</li>\n</ul>\n<h2 id=\"消息队列（生产者消费模式）\"><a href=\"#消息队列（生产者消费模式）\" class=\"headerlink\" title=\"消息队列（生产者消费模式）\"></a>消息队列（生产者消费模式）</h2><p>Redis不仅可作为缓存服务器，还可用作消息队列。它的列表类型天生支持用作消息队列。<br>Redis提供了两种方式来作消息队列。<br>一个是使用生产者消费模式，另一个就是发布订阅者模式。<br>前者会让一个或者多个客户端监听消息队列，一旦消息到达，消费者马上消费，谁先抢到算谁的，如果队列里没有消息，则消费者继续监听。<br>后者也是一个或多个客户端订阅消息频道，只要发布者发布消息，所有订阅者都能收到消息，订阅者都是平等的。<br>如下图所示：</p>\n<p><img src=\"http://oxigzlivh.bkt.clouddn.com/2018-06-23-15297224494777.jpg\" alt=\"\"></p>\n<p>由于Redis的列表是使用双向链表实现的，保存了头尾节点，所以在列表头尾两边插取元素都是非常快的。所以可以直接使用Redis的List实现消息队列，只需简单的两个指令lpush和rpop或者rpush和lpop。</p>\n<h2 id=\"流水号判重\"><a href=\"#流水号判重\" class=\"headerlink\" title=\"流水号判重\"></a>流水号判重</h2><p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。<br>Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。<br>集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。<br>我们可以使用Set进行<strong>流水号判重操作</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如：</span><br><span class=\"line\">Key:serno_YYYYMMDD</span><br><span class=\"line\">Set:[serno1,serno2 ... sernoN]</span><br><span class=\"line\"></span><br><span class=\"line\">Command：</span><br><span class=\"line\">SADD serno_YYYYMMDD sernoX </span><br><span class=\"line\">加入Set中，若已存在则返回0，若加入成功则返回1</span><br></pre></td></tr></table></figure>\n<h1 id=\"四、Redis实践\"><a href=\"#四、Redis实践\" class=\"headerlink\" title=\"四、Redis实践\"></a>四、Redis实践</h1><p><a id=\"practice\"></a></p>\n<h2 id=\"支付系统-额度服务\"><a href=\"#支付系统-额度服务\" class=\"headerlink\" title=\"支付系统-额度服务\"></a>支付系统-额度服务</h2><p>请参考另一篇文章</p>\n<h2 id=\"Redis数据迁移\"><a href=\"#Redis数据迁移\" class=\"headerlink\" title=\"Redis数据迁移\"></a>Redis数据迁移</h2><p>方案进行中，后续分享。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlpgr4hy00086ouanem2k0ws","category_id":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4i5000j6ouam7r31hkg"},{"post_id":"cjlpgr4hy00086ouanem2k0ws","category_id":"cjlpgr4i3000e6ouaxu8ishpc","_id":"cjlpgr4i6000n6ouaj2516hza"},{"post_id":"cjlpgr4hl00006ouadkhlw2tc","category_id":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4i7000p6ouazosixacn"},{"post_id":"cjlpgr4hl00006ouadkhlw2tc","category_id":"cjlpgr4i4000g6ouay0xeghhj","_id":"cjlpgr4i8000t6oua2hsw6tzm"},{"post_id":"cjlpgr4hr00026ouab0p2vgxd","category_id":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4ia00106ouaxs6tmaee"},{"post_id":"cjlpgr4hr00026ouab0p2vgxd","category_id":"cjlpgr4i7000r6oua08gh7ykt","_id":"cjlpgr4ib00126oua4oipnyaq"},{"post_id":"cjlpgr4hw00066ouas0pnwtoe","category_id":"cjlpgr4hu00046ouaztgyh6st","_id":"cjlpgr4ib00146ouahqg4s236"},{"post_id":"cjlpgr4hw00066ouas0pnwtoe","category_id":"cjlpgr4i7000r6oua08gh7ykt","_id":"cjlpgr4ic00156ouah21e9yv0"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","category_id":"cjlpgr4i5000k6ouap2talv4v","_id":"cjlpgr4ic00176oua1uuw58pv"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","category_id":"cjlpgr4ia000z6oua8k95i9sd","_id":"cjlpgr4ic00196ouaqhejoe1n"}],"PostTag":[{"post_id":"cjlpgr4hl00006ouadkhlw2tc","tag_id":"cjlpgr4hv00056ouaorul2rlu","_id":"cjlpgr4i5000i6ouaownz2wma"},{"post_id":"cjlpgr4hl00006ouadkhlw2tc","tag_id":"cjlpgr4i0000b6ouay3co8f38","_id":"cjlpgr4i5000l6oual0p9eeo7"},{"post_id":"cjlpgr4hl00006ouadkhlw2tc","tag_id":"cjlpgr4i3000d6ouak6c831o1","_id":"cjlpgr4i6000o6ouan3d0skby"},{"post_id":"cjlpgr4hl00006ouadkhlw2tc","tag_id":"cjlpgr4i4000f6oua1rmyonwf","_id":"cjlpgr4i7000q6oua0zk6gjua"},{"post_id":"cjlpgr4hr00026ouab0p2vgxd","tag_id":"cjlpgr4hv00056ouaorul2rlu","_id":"cjlpgr4ia000w6ouajyiy6nlh"},{"post_id":"cjlpgr4hr00026ouab0p2vgxd","tag_id":"cjlpgr4i0000b6ouay3co8f38","_id":"cjlpgr4ia000x6oua1frsiylz"},{"post_id":"cjlpgr4hr00026ouab0p2vgxd","tag_id":"cjlpgr4i3000d6ouak6c831o1","_id":"cjlpgr4ib00116ouau6ttdqz5"},{"post_id":"cjlpgr4hw00066ouas0pnwtoe","tag_id":"cjlpgr4hv00056ouaorul2rlu","_id":"cjlpgr4ic00186oualfzek22f"},{"post_id":"cjlpgr4hw00066ouas0pnwtoe","tag_id":"cjlpgr4i0000b6ouay3co8f38","_id":"cjlpgr4ic001a6ouaukp7tyyx"},{"post_id":"cjlpgr4hw00066ouas0pnwtoe","tag_id":"cjlpgr4i3000d6ouak6c831o1","_id":"cjlpgr4id001c6ouag5wbveu9"},{"post_id":"cjlpgr4hy00086ouanem2k0ws","tag_id":"cjlpgr4hv00056ouaorul2rlu","_id":"cjlpgr4ie001f6ouaa2aqeqzn"},{"post_id":"cjlpgr4hy00086ouanem2k0ws","tag_id":"cjlpgr4i0000b6ouay3co8f38","_id":"cjlpgr4ie001g6ouapt8oik61"},{"post_id":"cjlpgr4hy00086ouanem2k0ws","tag_id":"cjlpgr4ic001b6ouaorqyc3r2","_id":"cjlpgr4ie001i6ouahgl5w8dc"},{"post_id":"cjlpgr4hy00086ouanem2k0ws","tag_id":"cjlpgr4i4000f6oua1rmyonwf","_id":"cjlpgr4ie001j6ouaqu7tx3hy"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","tag_id":"cjlpgr4id001e6ouaqrdddulc","_id":"cjlpgr4if001l6ouacotulimi"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","tag_id":"cjlpgr4i0000b6ouay3co8f38","_id":"cjlpgr4if001m6oua8d7mwtme"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","tag_id":"cjlpgr4hv00056ouaorul2rlu","_id":"cjlpgr4if001n6oua2v5w6c9i"},{"post_id":"cjlpgr4hz00096oua75yfz4sb","tag_id":"cjlpgr4ie001k6ouachi9bxwc","_id":"cjlpgr4if001o6ouam8hbn1sr"}],"Tag":[{"name":"技术","_id":"cjlpgr4hv00056ouaorul2rlu"},{"name":"redis","_id":"cjlpgr4i0000b6ouay3co8f38"},{"name":"教程","_id":"cjlpgr4i3000d6ouak6c831o1"},{"name":"生产","_id":"cjlpgr4i4000f6oua1rmyonwf"},{"name":"项目","_id":"cjlpgr4ic001b6ouaorqyc3r2"},{"name":"培训","_id":"cjlpgr4id001e6ouaqrdddulc"},{"name":"会议","_id":"cjlpgr4ie001k6ouachi9bxwc"}]}}